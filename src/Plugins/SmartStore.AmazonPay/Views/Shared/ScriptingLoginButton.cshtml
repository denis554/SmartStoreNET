@using SmartStore.AmazonPay.Services;
@model SmartStore.AmazonPay.Models.AmazonPayViewModel

<script type="text/javascript">
	window.onAmazonLoginReady = function() {
		try {
			amazon.Login.setClientId('@Html.Raw(Model.ClientId)');
		}
		catch (e) {
			console.log(e);
			alert(e);
		}
	};

	window.onAmazonPaymentsReady = function () {
		try {
			// We cannot provide a logout link.
			//amazon.Login.logout();
		}
		catch (e) {
			console.log(e);
			alert(e);
		}

		try {
			var authRequest, addressConsentToken;

			OffAmazonPayments.Button('@Html.Raw(Model.WidgetId)', '@Html.Raw(Model.SellerId)', {
				type: '@(Model.ButtonType ?? (Model.Type == AmazonPayRequestType.AuthenticationPublicInfo ? "Login" : "PwA"))',
				color: '@(Model.ButtonColor ?? "Gold")',
				size:  '@(Model.ButtonSize ?? "small")',
				language: '@(Model.LanguageCode ?? "de-DE")',
				authorization: function() {
					authRequest = amazon.Login.authorize({
							scope: 'profile payments:widget payments:shipping_address payments:billing_address',
							popup: @(Model.UsePopupWindow.ToString().ToLower()),
						},
						function (response) {
							addressConsentToken = response.access_token;
						}
					);
				},
				onSignIn: function (orderReference) {
					var isAuthButton = @((Model.Type == AmazonPayRequestType.AuthenticationPublicInfo).ToString().ToLower());
					var handlerUrl = '@string.Concat(Model.ButtonHandlerUrl, Model.ButtonHandlerUrl.Contains('?') ? "&" : "?", "addressConsentToken=")';
					handlerUrl += encodeURIComponent(addressConsentToken);

					if (isAuthButton) {
						window.location = handlerUrl;
					}
					else {
						var referenceId = orderReference.getAmazonOrderReferenceId();
						if (referenceId) {
							window.location = handlerUrl + '&orderReferenceId=' + encodeURIComponent(referenceId);
						}
						else {
							alert('@T("Plugins.Payments.AmazonPay.MissingOrderReferenceId")');
						}
					}
				},
				onError: function (error) {
					alert(error.getErrorCode() + ': ' + error.getErrorMessage());
				}
			});
		}
		catch (e) {
			console.log(e);
			alert(e);
		}
	};
</script>

<script async="async" src="@Html.Raw(Model.WidgetUrl)"></script>
