@using SmartStore.PayPal.Models;
@model PayPalPlusCheckoutModel
<script src="https://www.paypalobjects.com/webstatic/ppplus/ppplus.min.js" type="text/javascript"></script>
<script type="text/javascript">
	try {

		var ppp = PAYPAL.apps.PPP({
			approvalUrl: "@Html.Raw(Model.ApprovalUrl)",
			placeholder: "PayPalPlusPaymentWall",
			mode: "@(Model.UseSandbox ? "sandbox" : "live")",
			country: "@(Model.BillingAddressCountryCode ?? "DE")",
			buttonLocation: "outside",
			language: "@Html.Raw(Model.LanguageCulture ?? "de_DE")",
			useraction: "continue",
			surcharging: @Model.HasPaymentFee.ToString().ToLower(),
			showLoadingIndicator: true,
			//showPuiOnSandbox: true,
			enableContinue: "PayPalPlusNextCheckoutStep",
			disableContinue: "PayPalPlusNextCheckoutStep",
			//enableContinue: function () {
			//	$('#PayPalPlusNextCheckoutStep').prop('disabled', false);
			//},
			//disableContinue: function () {
			//	$('#PayPalPlusNextCheckoutStep').prop('disabled', true);
			//},
			onLoad: function () {
				$('#PayPalPlusNextCheckoutStep').fadeIn();
			},
			@if (Model.ThirdPartyPaymentMethods.Any())
			{
				<text>thirdPartyPaymentMethods: [</text>
				foreach (var method in Model.ThirdPartyPaymentMethods)
				{
					<text>{ redirectUrl: "</text>@Html.Raw(method.RedirectUrl)<text>",</text>
					<text>methodName: </text>@Html.Raw(method.MethodName)<text>,</text>
					if (method.ImageUrl.HasValue())
					{
					<text>imageUrl: "</text>@Html.Raw(method.ImageUrl)<text>",</text>
					}
					if (method.Description.HasValue())
					{
					<text>description: </text>@Html.Raw(method.Description)<text>,</text>
					}
					<text> }, </text>
				}
				<text>]</text>
			}
		});

	}
	catch (e) {
		alert(e.description);
	}
</script>
<script type="text/javascript">
	jQuery(document).ready(function () {

		// next button clicked
		$('#PayPalPlusNextCheckoutStep').click(function (e) {
			e.preventDefault();
			PAYPAL.apps.PPP.doCheckout();
			return false;
		});

	});
</script>