@using SmartStore.PayPal;
@using SmartStore.PayPal.Models;
@using SmartStore.Web.Framework;
@using SmartStore.Web.Framework.UI;
@model PayPalPlusConfigurationModel
@{
	Layout = "";
	Html.AddCssFileParts(true, "~/Plugins/SmartStore.PayPal/Content/smartstore.paypal.css");
}

<div class="plugin-configuration">
	<div>
		<div class="alert alert-info">
			<button class="close" data-dismiss="alert">&#215;</button>
			@Html.Raw(T("Plugins.Payments.PayPalPlus.AdminInstruction"))
		</div>
	</div>
	<div>
		<a href="https://www.paypal.de/paypal-plus" target="_blank">
			<img src="@Url.Content("~/Plugins/SmartStore.PayPal/Content/branding.png")" alt="PayPal" />
		</a>
	</div>
</div>

@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })

@Html.ValidationSummary(false)

@using (Html.BeginForm())
{
    <table class="adminContent configure-paypal-plus">
		<tr>
			<td colspan="2">
				<div class="admin-config-group">
					<div class="title">
						@Model.ConfigGroups.SafeGet(0)
					</div>
				</div>
			</td>
		</tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.UseSandbox)
            </td>
            <td class="adminData">
				@*multistore context not possible, see IPN handling*@
                @Html.EditorFor(model => model.UseSandbox)
                @Html.ValidationMessageFor(model => model.UseSandbox)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ClientId)
            </td>
            <td class="adminData">
				@Html.SettingOverrideCheckbox(model => model.ClientId)
                @Html.TextBoxFor(model => model.ClientId, new { @class = "control-xlarge" })
                @Html.ValidationMessageFor(model => model.ClientId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Secret)
            </td>
            <td class="adminData">
				@Html.SettingOverrideCheckbox(model => model.Secret)
                @Html.TextBoxFor(model => model.Secret, new { @class = "control-xlarge" })
                @Html.ValidationMessageFor(model => model.Secret)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ExperienceProfileId)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ExperienceProfileId)

				<a id="CreateExperienceProfile" href="javascript:void(0)" data-url="@Url.Action("CreateExperienceProfile", "PayPalPlus", new { area = Plugin.SystemName })" class="btn btn-warning">
					<i class="fa fa-gear"></i>&nbsp;@(T("Plugins.SmartStore.PayPal.CreateNow"))!
				</a>

                @Html.ValidationMessageFor(model => model.ExperienceProfileId)
            </td>
        </tr>
		<tr class="adminSeparator">
			<td colspan="2">
				<div class="admin-config-group">
					<div class="title">
						@Model.ConfigGroups.SafeGet(1)
					</div>
				</div>
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.SecurityProtocol)
			</td>
			<td class="adminData">
				@Html.DropDownListFor(model => model.SecurityProtocol, Model.AvailableSecurityProtocols, T("Common.Unspecified"))
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.TransactMode)
			</td>
			<td class="adminData">
				@Html.SettingOverrideCheckbox(model => model.TransactMode)
				@Html.DropDownListFor(model => model.TransactMode, Model.TransactModeValues)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.IpnChangesPaymentStatus)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.IpnChangesPaymentStatus)
				@Html.ValidationMessageFor(model => model.IpnChangesPaymentStatus)
			</td>
		</tr>
		<tr class="adminSeparator">
			<td colspan="2">
				<div class="admin-config-group">
					<div class="title">
						@Model.ConfigGroups.SafeGet(2)
					</div>
				</div>
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.AdditionalFee)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.AdditionalFee)
				@Html.ValidationMessageFor(model => model.AdditionalFee)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.AdditionalFeePercentage)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.AdditionalFeePercentage)
				@Html.ValidationMessageFor(model => model.AdditionalFeePercentage)
			</td>
		</tr>
        <tr>
			<td class="adminTitle">
				&nbsp;
			</td>
            <td class="adminData">
                <button type="submit" name="save" class="btn btn-primary" value="save">
                    <i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")
                </button>
            </td>
        </tr>
    </table>
}

<script type="text/javascript">
	jQuery(document).ready(function () {

		$('#CreateExperienceProfile').click(function () {
			$(this).doAjax({
				ask: '@T("Admin.Common.AreYouSure")',
				callbackSuccess: function (response) {
					if (!_.isEmpty(response.id)) {
						$('#@Html.FieldIdFor(x => x.ExperienceProfileId)').val(response);
					}
				}
			});
		});

	});
</script>