@{
    Layout = "";
    Html.AddCssFileParts(@Url.Content("~/Plugins/Widgets.TrustedShopsSeal/Content/trustedshops.css"));
}
@model SmartStore.Plugin.Widgets.TrustedShopsSeal.Models.ConfigurationModel
@using SmartStore.Web.Framework;

<div class="ts-info">
    <img src="@Url.Content(@T("Plugins.Widgets.TrustedShopsCustomerReviews.Image.Logo"))" class="pull-right" />
    <div class="intro">
        @Html.Raw(@T("Plugins.Widgets.TrustedShopsCustomerReviews.Introduction.Headline"))
    </div>
    <div class="clearfix">
        <div class="pull-left">
            <img src="@Url.Content(@T("Plugins.Widgets.TrustedShopsCustomerReviews.Image.Seal"))" />
            <div class="prepared">
                <span>@Html.Raw(@T("Plugins.Widgets.TrustedShopsCustomerReviews.Prepared"))</span>
            </div>
        </div>
        @Html.Raw(@T("Plugins.Widgets.TrustedShopsCustomerReviews.Introduction.Body"))
    </div>
</div>

<div class="alert alert-info">
    @Html.Raw(@T("Plugins.Widgets.TrustedShopsSeal.AdminInstruction"))
</div>

@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })
	
@using (Html.BeginForm())
{    
<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.WidgetZone)
        </td>
        <td class="adminData">
			@Html.SettingOverrideCheckbox(model => model.WidgetZone)
            @Html.DropDownListFor(model => model.WidgetZone, Model.AvailableZones)
            @Html.ValidationMessageFor(model => model.WidgetZone)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.TrustedShopsId)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.TrustedShopsId)
            @Html.ValidationMessageFor(model => model.TrustedShopsId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.IsTestMode)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.IsTestMode)
            @Html.ValidationMessageFor(model => model.IsTestMode)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ShopName)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.ShopName)
            @Html.ValidationMessageFor(model => model.ShopName)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ShopText)
        </td>
        <td class="adminData">
            @Html.SettingEditorFor(model => model.ShopText)
            @Html.ValidationMessageFor(model => model.ShopText)
        </td>
    </tr>

    <tr>
        <td>&nbsp;</td>
        <td style="padding:10px 0">
            <button type="submit" name="save" value="save" class="btn btn-primary">
				<i class="icon-ok"></i>&nbsp;@T("Admin.Common.Save")
            </button>
        </td>
    </tr>
</table>
}