@model SearchModel
@using SmartStore.Core;
@using SmartStore.Core.Infrastructure;
@using SmartStore.Web;
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web.Framework.UI;

@{
    Layout = "_Root";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}

<div class="page search-page">
    <div class="page-body">
        @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
        {
            <div class="search-input">
                <label for="quicksearch" class="ui-hidden-accessible">@T("Search"):</label>
                <input type="search" name="q" id="quicksearch" value="@Model.Q"  />
            </div>
            <div class="search-results">
                @if (!String.IsNullOrEmpty(Model.Warning))
                {
                    <span class="warning">
                        @Model.Warning
                    </span>
                }
                @if (Model.NoResults)
                {
                    <span class="result">
                        @T("Search.NoResultsText")
                    </span>
                }
                @if (Model.Products.Count > 0)
                {
                    <div class="product-list">
                        <ul data-role="listview" data-inset="true" data-filter="false" data-theme="c">
                            @foreach (var product in Model.Products)
                            {
                                <li>
                                    @Html.Partial("_ProductBox", product)
                                </li>
                            }
                        </ul>
                    </div>
                }

                @Html.SmartStore().Pager(Model.PagingFilteringContext).Name("pagination-bottom").QueryParam("pagenumber")
            </div>
        }
    </div>
</div>
