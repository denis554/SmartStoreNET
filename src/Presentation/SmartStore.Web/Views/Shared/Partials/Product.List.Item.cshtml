@model ProductSummaryModel.SummaryItem

@using System.Globalization;
@using SmartStore.Web.Models.Catalog;

@{ 
	var artDetailUrl = Url.RouteUrl("Product", new RouteValueDictionary { { "SeName", Model.SeName } });
	var list = Model.Parent;
	var picture = Model.Picture;
}

<article class="art" data-id="@Model.Id">
	<div class="art-picture-block">
		@if (picture.Title.HasValue())
		{
			<a class="art-picture" href="@artDetailUrl" title="@picture.Title">
				<img src="@picture.ImageUrl" alt="@picture.AlternateText" title="@picture.Title" />
			</a>
		}
	</div>

	@if (Model.Badges.Any())
	{
		@* TODO: (mc) Let user define one free badge per product in backend *@
		<div class="art-badges">
			@foreach (var badge in Model.Badges.OrderBy(x => x.DisplayOrder))
			{
				@* TODO: (mc) Move BS4 label/tag class definitions to art-badge.art-badge-[style] (?)  *@
				<span class="label label-@badge.Style.ToString().ToLowerInvariant() art-badge">@Html.Raw(badge.Label)</span>
			}
			<span class="label label-warning art-badge">Neu</span>
		</div>
	}

	<div class="art-data-block">
		<div class="art-info-block">
			@if (list.ShowRatings || list.ShowBrand)
			{
				if (list.ViewMode == ProductSummaryViewMode.List)
				{
					<div class="art-info-group clearfix">
						@if (list.ShowBrand) { Html.RenderPartial("Product.List.Item.Brand", Model); }
						@if (list.ShowRatings) { Html.RenderPartial("Product.List.Item.Rating", Model); }
					</div>
				}
				else
				{
					if (list.ShowRatings) { Html.RenderPartial("Product.List.Item.Rating", Model); }
					if (list.ShowBrand) { Html.RenderPartial("Product.List.Item.Brand", Model); }
				}
			}

			<h4 class="art-name">
				<a href="@artDetailUrl" title="@Model.Name">
					<span>@Model.Name</span>
				</a>
			</h4>

			@if (list.ShowDescription)
			{
				<div class="art-description" title="@Model.ShortDescription">
					@* TODO: (mc) Only render description block when merchant wishes so and only when at least one description is specified *@
					@Html.Raw(Model.ShortDescription.Truncate(160, "..."))
				</div>
			}

			@if (list.ViewMode != ProductSummaryViewMode.List)
			{ 
				Html.RenderPartial("Product.List.Item.Price", Model);
			}

			@if (list.ShowLegalInfo)
			{
				<div class="art-legalinfo">
					@Html.Raw(Model.LegalInfo)
				</div>
			}
		</div>

		@if (list.ViewMode == ProductSummaryViewMode.List)
		{
			<div class="art-actions-block">
				<div class="p-b-1 hidden-xs-up">
					<div class="art-price fs-h2 font-weight-normal" style="font-weight: 500 !important; line-height: 1; padding-bottom: 0.3rem">
						129,00 € *
					</div>
					<div class="art-shipsurcharge">
						zzgl. <b>8,99 €</b> Transportzuschlag
					</div>
					<div class="art-pangv" title="Inhalt: 20 m (4,76 € * / 1 m)">
						Inhalt: 20 m (4,76 € * / 1 m)
					</div>
				</div>

				@{ Html.RenderPartial("Product.List.Item.Price", Model); }

				<button class="btn btn-primary btn-block text-xs-left m-b-1 m-t-1">
					<i class="fa fa-fw fa-cart-arrow-down"></i>
					<span>In den Warenkorb</span>
				</button>
				<div class="btn-group" role="group" aria-label="Basic example" style="font-size: 0.6rem">
					<button class="btn btn-secondary btn-flat btn-sm xbtn-block text-xs-left">
						<i class="fa fa-fw fa-heart-o"></i>
						<span>Merken</span>
					</button>
					<button class="btn btn-secondary btn-flat btn-sm xbtn-block text-xs-left">
						<i class="fa fa-fw fa-retweet"></i>
						<span>Vergleichen</span>
					</button>
				</div>
			</div>
		}
	</div>

	@{ 
		if (list.ViewMode != ProductSummaryViewMode.List)
		{
			var showDrop =
				!Model.Price.DisableWishlistButton
				|| list.CompareEnabled
				|| (!Model.Price.DisableBuyButton && list.BuyEnabled)
				|| Model.ColorAttribute != null
				|| Model.Attributes != null;

			if (showDrop)
			{
				Html.RenderPartial("Product.List.Item.Drop", Model);
			}
		}
	}
</article>

