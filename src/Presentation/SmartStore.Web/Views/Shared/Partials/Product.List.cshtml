@model ProductSummaryModel

@using SmartStore.Core.Domain.Media;
@using SmartStore.Utilities;
@using SmartStore.Web.Models.Catalog;

@{
	var id = "artlist-" + CommonHelper.GenerateRandomDigitCode(10);
	//var maxPictureSize = Model.Select(x => x.DefaultPictureModel)
	//	.Where(x => x != null)
	//	.Max(x => x.Size);

	// TODO: (mc) Fetch this from the (new) parent model or the product category
	var thumbAspectRatio = EngineContext.Current.Resolve<MediaSettings>().DefaultThumbnailAspectRatio;
	var paddingTop = string.Empty;

	if (thumbAspectRatio != 1 && thumbAspectRatio > 0.2 && thumbAspectRatio < 2)
	{
		paddingTop = (thumbAspectRatio * 100) + "%";
	}

	string pagerHtml = null;
	if (Model.PagedList.TotalPages > 1)
	{
		pagerHtml = Html.Partial("Product.List.Pager", Model).ToHtmlString();
	}

	// TODO: (mc) AllowFiltering (?)
	var hasActions = Model.PagedList.TotalPages > 1
		|| Model.AllowSorting
		|| Model.AllowViewModeChanging
		|| Model.AllowFiltering;
}

@if (paddingTop.HasValue())
{
	<style type="text/css">
		#@id .art-picture { 
			padding-top: @paddingTop;
		}
	</style>
}

@if (hasActions)
{
	<div class="artlist-actions artlist-actions--top clearfix">
		@if (Model.AllowSorting || Model.AllowFiltering)
		{
			<div class="artlist-action-group artlist-action-group--filtersort clearfix">
				@{ Html.RenderPartial("Product.List.FilterSort", Model); }
			</div>
		}

		@if (pagerHtml.HasValue() || Model.AllowViewModeChanging)
		{
			<div class="artlist-action-group artlist-action-group--page clearfix">
				@* ViewMode *@
				@if (Model.AllowViewModeChanging && Model.ViewMode == ProductSummaryViewMode.Grid || Model.ViewMode == ProductSummaryViewMode.List)
				{
					Html.RenderPartial("Product.List.ViewMode", Model);
				}

				@* Pager *@
				@if (pagerHtml.HasValue())
				{
					Html.RenderPartial("Product.List.Pager", Model);
				}
			</div>
		}
	</div>
}

<div id="@id" class="artlist artlist-grid artlist-4-cols">
	@foreach (var product in Model.Items)
	{
		Html.RenderPartial("Product.List.Item", product);
	}
</div>

@if (pagerHtml.HasValue())
{	
	<div class="artlist-actions artlist-actions--bottom clearfix">
		<div class="artlist-action-group artlist-action-group--page clearfix">
			@Html.Raw(pagerHtml)
		</div>
	</div>
}
