@model ProductDetailsModel

@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web.Framework.UI;
@using SmartStore.Web;

@{
	Layout = "_ColumnsOne";

	Html.AddTitleParts(Model.MetaTitle.NullEmpty() ?? Model.Name);
	Html.AddMetaDescriptionParts(Model.MetaDescription);
	Html.AddMetaKeywordParts(Model.MetaKeywords);

	Html.AddScriptParts("~/Themes/Alpha/Scripts/public.product-detail.js");

	if (Model.CanonicalUrlsEnabled)
	{
		var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
		Html.AddCanonicalUrlParts(productUrl);
	}

	/* TODO: (mc)
	 * - CustomerEnteredPrice
	 * - Badges
	 * - GTIN: user must specifiy the GTIN type on product level (gtin12, gtin13 etc.). See https://schema.org/Offer
	 * - Reviews
	 * - Reviews Microdata
	 * - Qty input: make settings (Whether to display, Dropdown, Spinner)
	 * - FIXME (mg) > no (discount) badges shown in products lists (with bundled products & PricePerBundleItems ON)
	 */
}

<div class="page product-details-page">
	<!-- Breadcrumb -->
	@{ Html.RenderAction("ProductBreadcrumb", "Catalog", new { productId = Model.Id }); }

	@Html.Widget("productdetails_top")

	<div id="total-price-update-container" class="page-body update-container" data-referto="#attributes, #add-to-cart, #bundle-overview" data-url="@Html.Raw(Model.UpdateProductDetailsUrl())">
		@using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
		{
			<article class="pd" itemscope itemtype="http://schema.org/Product">
				<!-- Top Content: Picture, Description, Attrs, Variants, Bundle Items, Price etc. -->
				<section class="row pd-section pd-section-top">
					<!-- Data: Picture, Description, Attrs etc. -->
					<div class="col-xs-12 col-md-6 col-lg-7 pd-data-col">
						@{ Html.RenderPartial("Product.Picture", Model.DetailsPictureModel); }
					</div>
					<!-- Sidebar: Info, Price, Buttons etc. -->
					<aside class="col-xs-12 col-md-6 col-lg-5 pd-info-col zoom-window-container">
						@{ Html.RenderPartial("Product.Info", Model); }
						<!-- Product attributes (SKU, EAN, Weight etc.) -->
						@{ Html.RenderPartial("Product.Attrs", Model); }
						<!-- Offer box -->
						@{ Html.RenderPartial("Product.Offer", Model); }
					</aside>
				</section>

				<!-- Bottom Content: Full Description, Specification, Review etc. -->
				<section class="pd-section pd-section-bottom">
					<!-- Tabs -->
					@{ Html.RenderPartial("Product.Tabs", Model); }
				</section>
			</article>
		}
	</div>

	@Html.Widget("productdetails_bottom")

	@* TODO: (mc) find more intelligent way of rendering RecentlyViewedProductsBlock globally *@
	@{ Html.RenderAction("RecentlyViewedProductsBlock", "Catalog", new { area = "" }); }
</div>

<script type="text/javascript">
    $(function () {
        var settings = {
            galleryStartIndex: @(Model.DetailsPictureModel.GalleryStartIndex),
            enableZoom: toBool('@(Model.DetailsPictureModel.DefaultPictureZoomEnabled)'),
            zoomType: '@Model.DetailsPictureModel.PictureZoomType' // window, inner, lens
        };

    	$('#product-details-form').productDetail(settings);
    });
</script>

