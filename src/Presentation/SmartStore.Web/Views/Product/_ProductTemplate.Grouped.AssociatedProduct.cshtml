@model ProductDetailsModel
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web;

<hr />

<div class="row product-variant-line update-container" data-url="@Html.Raw(Model.UpdateProductDetailsUrl("associateditem"))">
	
	@if (!String.IsNullOrWhiteSpace(Model.DetailsPictureModel.DefaultPictureModel.ImageUrl))
	{
		<div class="col-md-2 variant-picture dynamic-image text-xs-center m-t-1">
			@if (Model.DetailsPictureModel.DefaultPictureModel.ImageUrl.HasValue())
			{
				<img alt="@Model.DetailsPictureModel.AlternateText" src="@Model.DetailsPictureModel.DefaultPictureModel.ImageUrl" title="@Model.DetailsPictureModel.DefaultPictureModel.Title" />
			}
		</div>
	}

	<div class="col-md-10 variant-data">
		@if (!String.IsNullOrWhiteSpace(Model.Name))
		{
			<div class="variant-name">
				@if (Model.VisibleIndividually)
				{
					<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@T("Products.Details")">@Model.Name</a>
				}
				else
				{
					@Model.Name
				}
			</div>
		}

		@if (!String.IsNullOrWhiteSpace(Model.ShortDescription))
		{
			<div class="variant-description">
				@Html.Raw(Model.ShortDescription)
			</div>
		}
	</div>
</div>

<div class="row">
    <div class="col-md-push-2 col-md-6">
        <table>
            @if (Model.ShowSku)
				{
                <tr valign="top" class="attr-sku @(String.IsNullOrWhiteSpace(Model.Sku) ? "hidden-xs-up fade" : "")">
                    <td class="attr-label">
                        <strong>@T("Products.Sku"):</strong>
                    </td>
                    <td class="value">
                        @Model.Sku
                    </td>
                </tr>
				}
            @if (Model.ShowManufacturerPartNumber)
				{
                <tr valign="top" class="attr-mpn @(String.IsNullOrWhiteSpace(Model.ManufacturerPartNumber) ? "hidden-xs-up fade" : "")">
                    <td class="attr-label">
                        <strong>@T("Products.ManufacturerPartNumber"):</strong>
                    </td>
                    <td class="value">
                        @Model.ManufacturerPartNumber
                    </td>
                </tr>
				}

            @if (Model.ShowGtin)
				{
                <tr valign="top" class="attr-gtin @(String.IsNullOrWhiteSpace(Model.Gtin) ? "hidden-xs-up fade" : "")">
                    <td class="attr-label">
                        <strong>@T("Products.GTIN"):</strong>
                    </td>
                    <td class="value">
                        @Model.Gtin
                    </td>
                </tr>
				}

            @if (Model.ShowWeight)
				{
                <tr valign="top" class="attr-weight @(String.IsNullOrWhiteSpace(Model.Weight) ? "hidden-xs-up fade" : "")">
                    <td class="caption bold">@T("Products.Weight")</td>
                    <td class="value">@Model.Weight</td>
                </tr>
				}

            @if (Model.ShowDimensions)
				{
                <tr valign="top" class="attr-length @(String.IsNullOrWhiteSpace(Model.Length) ? "hidden-xs-up fade" : "")">
                    <td class="caption bold">@T("Products.Length")</td>
                    <td class="value">@Model.Length</td>
                </tr>
                    <tr valign="top" class="attr-width @(String.IsNullOrWhiteSpace(Model.Width) ? "hidden-xs-up fade" : "")">
                        <td class="caption bold">@T("Products.Width")</td>
                        <td class="value">@Model.Width</td>
                    </tr>
                    <tr valign="top" class="attr-height @(String.IsNullOrWhiteSpace(Model.Height) ? "hidden-xs-up fade" : "")">
                        <td class="caption bold">@T("Products.Height")</td>
                        <td class="value">@Model.Height</td>
                    </tr>
				}

            <tr valign="top" class="stock attr-stock @(String.IsNullOrWhiteSpace(Model.StockAvailability) ? "hidden-xs-up fade" : "")">
                <td class="attr-label">
                    <strong>@T("Products.Availability"):</strong>
                </td>
                <td class="value">
                    @Model.StockAvailability
                </td>
            </tr>

        </table>
    </div>
</div>


<div class="variant-line-bottom row">

    @{
        bool hasAttrsOrGiftCard = false;
        string spanClass = "col-md-12";
        if (Model.ProductVariantAttributes.ShouldBeRendered() || Model.GiftCard.IsGiftCard)
        {
            hasAttrsOrGiftCard = true;
            spanClass = "col-md-6";
        }
    }

    @if (hasAttrsOrGiftCard)
    {
        <div class="left-content col-md-6">
            @{
                var dataDictAttributes = new ViewDataDictionary();
                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                <div class="product-attributes">
                    @Html.Partial("_Attributes", Model.ProductVariantAttributes, dataDictAttributes)
                </div>
            }

            @{
                var dataDictGiftCard = new ViewDataDictionary();
                dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}_0", Model.Id);
                @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
            }
        </div>}

    <div class="@spanClass">

        @Html.Action("ProductTierPrices", new { productId = Model.Id })

        <div class="quick-links">
            @if (Model.HasSampleDownload)
            {
                <div>
                    <a href="@Url.Action("Sample", "Download", new { id = Model.Id })">
                        @T("Products.DownloadSample")
                        <i class="fa fa-download"></i>
                    </a>
                </div>
            }
            @if (Model.DisplayBackInStockSubscription)
            {
                if (Model.IsCurrentCustomerRegistered)
                {
                    <a class="subscribe-for-back-in-stock" data-toggle="modal" href="#back-in-stock-subscription-modal" rel="nofollow">
                        @T("BackInStockSubscriptions.NotifyMeWhenAvailable")
                        <i class="fa fa-phone"></i>
                    </a>

                    <script type="text/javascript">
                        $(".subscribe-for-back-in-stock").click(function () {
                            $("#back-in-stock-subscription-modal .modal-body").html('<iframe id="iframe-backinstocksubsription" src="@Url.Action("BackInStockSubscribe", new { id = Model.Id })" width="600" height="170" scrolling="no" frameBorder="0" />');
                        });
                    </script>

                    <div id="back-in-stock-subscription-modal" class="modal hide fade" tabindex="-1">
                        <div class="modal-body">
                        </div>
                        <div class="modal-footer">
                            <button class="btn" data-dismiss="modal">@T("Common.OK")</button>
                        </div>
                    </div>
                }
                else
                {
                    <a href='@Url.RouteUrl("Login", new { ReturnUrl = Request.RawUrl })' rel="nofollow">
                        @T("BackInStockSubscriptions.NotifyMeWhenAvailable")
                        <i class="fa fa-phone"></i>
                    </a>
                }
            }
        </div>

        <div class="row">
            <div class="col-md-push-2 col-md-10">
                @{
                    var dataDictAddToCart = new ViewDataDictionary();
                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                    @Html.Partial("_AddToCart", Model, dataDictAddToCart)
                }
            </div>
        </div>

    </div>
</div>


