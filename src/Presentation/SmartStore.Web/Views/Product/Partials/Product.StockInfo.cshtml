@model ProductDetailsModel

@using SmartStore.Web.Models.Catalog;

@{
	var showAttrs = (Model.DisplayDeliveryTime && Model.IsShipEnabled)
		|| Model.StockAvailability.HasValue()
		|| Model.DisplayBackInStockSubscription;

	if (!showAttrs)
	{
		return;
	}
}

<div class="pd-group pd-delivery-info">
	@if (Model.StockAvailability.HasValue())
	{
		<div class="pd-stock p-b-05">
			@Model.StockAvailability
		</div>
	}
	@if (Model.DisplayDeliveryTime && Model.IsShipEnabled)
	{
		var statusLabel = Model.DisplayDeliveryTimeAccordingToStock ? Model.DeliveryTimeName : Model.StockAvailability;
		<div>
			<span class="p-r-05">@T("Products.DeliveryTime")</span>
			<span class="delivery-time" title="@T("Products.DeliveryTime") @statusLabel" @Html.Attr("style", "color:" + Model.DeliveryTimeHexValue, Model.DisplayDeliveryTimeAccordingToStock)>
				<i class="fa fa-circle delivery-time-status"></i>
				@statusLabel
			</span>
		</div>
	}
	@if (Model.DisplayBackInStockSubscription)
	{
		<div class="pd-attr-stocksub">
			<span>@{ Html.RenderPartial("_BackInStockSubscription", Model); }</span>
		</div>
	}
</div>


@if (Model.DisplayBackInStockSubscription && Model.IsCurrentCustomerRegistered)
{
	@section end{{
		<div id="back-in-stock-subscription-modal" class="modal fade" tabindex="-1">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-body">
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal">@T("Common.OK")</button>
					</div>
				</div>
			</div>
		</div>
	}}
}


