@using SmartStore.Core.Search.Facets
@using SmartStore.Web.Models.Search
@using SmartStore.Services.Search.Rendering;
@using SmartStore.Services.Search.Extensions;

@model ISearchResultModel

@{
	Layout = "";

	var templateProvider = ViewBag.TemplateProvider as IFacetTemplateProvider;
	var facetGroups = Model.SearchResult.Facets.Select(x => x.Value).OrderBy(x => x.DisplayOrder);

	int i = 0;
}

<div class="faceted-search-container">
	<div class="faceted-search" id="faceted-search">
		@foreach (var group in facetGroups)
		{
			var templateRoute = templateProvider.GetTemplateRoute(group);
			if (templateRoute == null)
			{
				continue;
			}

			i++;
			var hasSelection = group.Facets.Any(x => x.Value.IsSelected);
			var expanded = i <= 3 || hasSelection;

			<div class="facet-group" data-key="@group.Key">
				<a class="facet-toggle@(!expanded ? " collapsed" : "")" data-toggle="collapse" href="#facet-body-@(group.Key)" aria-expanded="@expanded" aria-controls="facet-body-@(group.Key)">
					@(group.Label ?? group.Key)
				</a>
				<div id="facet-body-@(group.Key)" class="facet-body collapse@(expanded ? " in" : "")" aria-expanded="@expanded">
					@{ Html.RenderAction(templateRoute.Action, templateRoute.Controller, templateRoute.RouteValues); }
				</div>
			</div>
		}
	</div>
</div>
