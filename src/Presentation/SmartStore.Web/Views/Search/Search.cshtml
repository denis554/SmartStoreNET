@using SmartStore.Web.Models.Search;
@using SmartStore.Web.Framework.UI;

@model SearchResultModel
@{
	Layout = "_ColumnsTwo";

	if (Model.Term.HasValue())
	{
		Html.AddTitleParts(T("Search.PageTitle", "\"" + Model.Term + "\""));
	}
	else
	{
		Html.AddTitleParts(T("Search.Title"));
	}

	int firstItemIndex = 0;
	int lastItemIndex = 0;
	if (Model.TotalProductsCount > 0)
	{
		firstItemIndex = Model.SearchResult.Hits.FirstItemIndex;
		lastItemIndex = Model.SearchResult.Hits.LastItemIndex;
	}

	var suggestions = Model.SearchResult.SpellCheckerSuggestions;
}

<div class="page search-page">
	<div class="page-title">
		<h1 class="h3">
			@if (Model.Term.HasValue())
			{
				@T("Search.PageTitle", "<small class='search-term'>" + Model.Term + "</small>")
			}
			else
			{
				@T("Search.Title")
			}		
		</h1>
		@if (Model.TotalProductsCount > 0)
		{
			<h5 class="search-hitcount">@T("Search.PagingInfo", "{0}-{1}".FormatInvariant(firstItemIndex.ToString("N0"), lastItemIndex.ToString("N0")), Model.TotalProductsCount.ToString("N0"))</h5>
		}
	</div>

    <div class="page-body">
		@if (Model.AttemptedTerm.HasValue())
		{
			<div class="alert alert-warning">
				@T("Search.TermCorrectedHint", "<strong>\"" + Model.Term + "\"</strong>", "<strong>\"" + Model.AttemptedTerm + "\"</strong>")
			</div>
		}

		@if (Model.Error.HasValue())
		{
			<div class="alert alert-danger">
				@Model.Error
			</div>
		}
		else if (Model.TotalProductsCount == 0)
		{
			<div class="alert alert-warning">
				@T("Search.NoResultsText")
			</div>
		}

		@if (suggestions.Any() && (Model.AttemptedTerm.HasValue() || Model.TotalProductsCount == 0))
		{
			<p class="search-suggestions">
				<strong>@T("Search.DidYouMean")</strong>
				@{ 
					var links = String.Join(", ", suggestions.Select(x => "<a href='" + Url.RouteUrl("Search", new { q = x }) + "'>{0}</a>".FormatCurrentUI(x)));
				}
				@Html.Raw(links)
			</p>
		}

        <div class="search-results">
            @if (Model.TotalProductsCount > 0)
            {
                <div class="card-deck card-cols-sm-1 card-cols-md-2 card-cols-lg-3 product-grid">
                    @foreach (var product in Model.TopProducts)
                    {
                        <article class="card card-block card-shadow text-xs-center">
                            @Html.Partial("_ProductBox", product)
                        </article>
                    }
                </div>
            }

			@if (Model.TotalProductsCount > 0)
			{
				@Html.SmartStore().Pager(Model.SearchResult.Hits).Name("pagination-bottom").QueryParam("i")
			}
        </div>
    </div>
</div>