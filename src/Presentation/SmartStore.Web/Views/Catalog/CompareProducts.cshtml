@model CompareProductsModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.CompareProducts").Text);
}
@using SmartStore.Core;
@using SmartStore.Core.Infrastructure;
@using SmartStore.Web.Models.Catalog;
@{
    string columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(90M / Model.Products.Count), 0).ToString() + "%";
    }


    var specificationAttributes = new List<ProductSpecificationModel>();
    foreach (var product in Model.Products)
    {
        foreach (var attribute in product.SpecificationAttributeModels)
        {
            if (specificationAttributes.Where(sa => sa.SpecificationAttributeId == attribute.SpecificationAttributeId).FirstOrDefault() == null)
            {
                specificationAttributes.Add(attribute);
            }
        }
    }
}
<div class="page compare-products-page">
    <div class="page-title">
        <h1>@T("Products.Compare.Title")</h1>
    </div>
    <div class="page-body">
        @if (Model.Products.Count > 0)
        {
            <div class="ar">
                <a class="btn" href='@Url.RouteUrl("ClearCompareList")' style="margin-bottom: 12px">
					<i class="icon icon-trash"></i>
                    @T("Products.Compare.Clear")
                </a>
            </div>
            
            <table class="compare-products-table table table-bordered table-striped table-hover x-table-condensed">
                <thead>
                    <tr>
                        <td>
                            &nbsp;
                        </td>
                        @foreach (var product in Model.Products)
                        {
                            <td style="width: @columnWidth; vertical-align: bottom;" class="ac">
                                <div>
                                    <p>
                                        <img alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" />
                                    </p>
                                    <p>
                                        <a class="btn btn-mini btn-danger remove-button" href='@Url.RouteUrl("RemoveProductFromCompareList", new { productId = product.Id })'>
                                            @T("Common.Remove")
                                        </a>
                                    </p>
                                </div>
                            </td>
                        }
                    </tr>
                    <tr class="product-name">
                        <td>
                            &nbsp;
                        </td>
                        @foreach (var product in Model.Products)
                        {
                            <td style="width: @columnWidth;">
                                <a class="link" href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a>
                            </td>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr class="product-price">
                        <th>
                            @T("Products.Compare.Price")
                        </th>
                        @foreach (var product in Model.Products)
                        {
                            <td style="width: @columnWidth;" class="a-center">
                                @product.ProductPrice.Price
                            </td>
                        }
                    </tr>
                    @if (Model.IncludeShortDescriptionInCompareProducts)
                    {
                        <tr class="short-description">
                            <th>
                                @T("Products.Compare.ShortDescription")
                            </th>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;" class="a-left">
                                    @Html.Raw(product.ShortDescription)
                                </td>
                            }
                        </tr>
                    }
                    @foreach (var specificationAttribute in specificationAttributes)
                    {
                        <tr>
                            <th>
                                @specificationAttribute.SpecificationAttributeName
                            </th>
                            @foreach (var product in Model.Products)
                            {
                                var foundProductSpec = product.SpecificationAttributeModels.Where(psa => psa.SpecificationAttributeId == specificationAttribute.SpecificationAttributeId).FirstOrDefault();
                                var specValue = foundProductSpec != null ? foundProductSpec.SpecificationAttributeOption : "";
                                                                
                                <td style="width: @columnWidth;" class="a-center">
                                    @if (!String.IsNullOrEmpty(specValue))
                                    {
                                        @specValue
                                    }
                                    else
                                    {
                                        <text>&nbsp;</text>
                                    }
                                </td>
                            }
                        </tr>                    
                    }
                    @if (Model.IncludeFullDescriptionInCompareProducts)
                    {
                        <tr class="full-description">
                            <th>
                                @T("Products.Compare.FullDescription")
                            </th>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;" class="a-left">
                                    @Html.Raw(product.FullDescription)
                                </td>
                            }
                        </tr>
                    }
                    @Html.Widget("compareproducts_row")
                </tbody>
            </table>
        }
    </div>
</div>
