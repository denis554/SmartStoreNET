@model ProductEmailAFriendModel
@using SmartStore.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductEmailAFriend").Text);
}
<div class="page email-a-friend-page">
    <div class="page-title">
        <h1>@T("Products.EmailAFriend.Title")</h1>
    </div>
    <div class="clear">
    </div>
    <div class="page-body">
        @if (Model.SuccessfullySent)
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            @*codehint: sm-edit begin*@
            using (Html.BeginForm("ProductEmailAFriend", "Catalog", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                               
            <fieldset>
                
                <p class="message-error">
                    @Html.ValidationSummary(true)
                </p>

                <legend><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></legend>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.FriendEmail, new { @class="control-label required" , @for="FriendEmail" } )
                    <div class="controls">
                        @Html.TextBoxFor(model => model.FriendEmail, new { @class = "fullname", placeholder = T("Products.EmailAFriend.FriendEmail.Hint") })
                        @Html.ValidationMessageFor(model => model.FriendEmail)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(model => model.YourEmailAddress, new { @class="control-label required" , @for="YourEmailAddress" } )
                    <div class="controls">
                        @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "fullname", placeholder = T("Products.EmailAFriend.YourEmailAddress.Hint") })
                        @Html.ValidationMessageFor(model => model.YourEmailAddress)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(model => model.PersonalMessage, new { @class="control-label" , @for="PersonalMessage" } )
                    <div class="controls">
                        @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "personal-message", placeholder = T("Products.EmailAFriend.PersonalMessage.Hint") })
                        @Html.ValidationMessageFor(model => model.PersonalMessage)
                    </div>
                </div>

                @if (Model.DisplayCaptcha)
                {
                    <div class="captcha-box">
                        @Html.Raw(Html.GenerateCaptcha())
                    </div>
                }

                <div class="control-group">
                    <div class="controls">
                        <button type="submit" name="send-email" class="btn send-email-a-friend-button">@T("Products.EmailAFriend.Button")</button>
                    </div>
                </div>

            </fieldset>
            }
            @*codehint: sm-edit end*@
        }
    </div>
</div>
