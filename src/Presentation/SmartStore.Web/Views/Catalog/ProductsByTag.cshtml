@model ProductsByTagModel

@using SmartStore.Core.Infrastructure;
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web;
@using SmartStore.Web.Models.Catalog;

@using SmartStore.Web.Framework.UI;
@using SmartStore.Core.Domain.Seo;

@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(string.Format(T("PageTitle.ProductsByTag").Text, Model.TagName));
    Html.AddMetaDescriptionParts(string.Format(T("PageTitle.ProductsByTag").Text, Model.TagName));
    
    //canonical URL
	var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
	if (canonicalUrlsEnabled)
	{
        var byTagUrl = Url.RouteUrl("ProductsByTag", new { productTagId = Model.Id, SeName = Model.TagName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(byTagUrl);
	}
}

<div class="page product-tag-page">
    <div class="page-title">
        <h1 class="h3">@T("Products.Tags.ProductsTaggedWith", "<small class='search-term'>" + Model.TagName + "</small>")</h1>	
    </div>

    <div class="page-body">
        @Html.Widget("productsbytag_top")

		<div class="product-list-container">
			@if (Model.Products != null && Model.Products.Items.Count > 0)
			{
				Html.RenderPartial("Product.List", Model.Products);
			}
		</div>

        @Html.Widget("productsbytag_bottom")
    </div>
</div>
