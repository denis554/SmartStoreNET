@model PrintableOrderDetailsModel
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Web.Models.Order;
@using SmartStore.Services.Localization;
@using SmartStore.Core.Html;
@{

    Layout = "~/Views/Shared/_Print2.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.OrderDetails").Text);

	var colWidths = Model.ShowSku ? new int[] { 40, 15, 10 } : new int[] { 50, 20, 10 };

	var company = Model.MerchantCompanyInfo;
	var contact = Model.MerchantContactData;
	var address = Model.BillingAddress;
}

@helper OrderLine(OrderDetailsModel.OrderItemModel item)
{
	<tr>
		<td class="text-left">
			@item.ProductName
			@if (item.ProductType == ProductType.BundledProduct)
			{
				
			}
			else
			{
				if (item.AttributeInfo.HasValue())
				{
					<div class="attributes" style="margin-left: 30px; font-size: 11pt;">
						@Html.Raw(item.AttributeInfo)
					</div>
				}			
			}
		</td>
		@if (Model.ShowSku)
		{
			<td class="text-left">
				@item.Sku
			</td>
		}
		<td class="text-right">
			@item.UnitPrice
		</td>
		<td class="text-left">
			@item.Quantity
		</td>
		<td class="text-right">
			@item.SubTotal
		</td>
	</tr>
}

<table style="width: 100%">
	<tr>
		<td style="width: 60%; vertical-align: top; padding-top: 40px">
			<div>
				<span style="border-bottom: 1px solid #777; display: inline-block; padding-bottom: 5px; font-size: 10pt">
					@company.CompanyName &middot; @company.Street @company.Street2 &middot; @company.ZipCode @company.City &middot; @company.CountryName @company.StateName
				</span>
			</div>
			<div style="margin-top: 10px">
				@if (address.CompanyEnabled && address.Company.HasValue())
				{
					<div>@address.Company</div>
				}
				<div>@address.FirstName @address.LastName</div>
				@if (address.StreetAddressEnabled && address.Address1.HasValue())
				{
					<div>@address.Address1</div>
				}
				@if (address.StreetAddress2Enabled && address.Address2.HasValue())
				{
					<div>@address.Address2</div>
				}
				@if (address.ZipPostalCodeEnabled || address.CityEnabled)
				{
					<div>@address.ZipPostalCode @address.City</div>
				}
				@if (address.StateProvinceEnabled || address.CountryEnabled)
				{
					<div>
						@address.CountryName.EmptyNull()
						@if (address.StateProvinceName.HasValue())
						{
							if (address.CountryName.HasValue())
							{
								<text>, </text>
							}
							<text>@address.StateProvinceName</text>
						}
					</div>
				}
			</div>
		</td>
		<td style="width: 40%; vertical-align: top; text-align: right">
			<div style="border: 1px solid #777; padding: 10px">
				<table style="width: 100%; text-align: left; font-size: 11pt">
					<tr>
						<td style="width: 50%; font-weight: 700">Auftrag#:</td>
						<td style="width: 50%">@Model.OrderNumber</td>
					</tr>
					<tr>
						<td style="width: 50%; font-weight: 700">Datum:</td>
						<td style="width: 50%">@Model.CreatedOn.ToShortDateString()</td>
					</tr>
					<tr>
						<td style="width: 50%; font-weight: 700">@T("Order.PaymentMethod"):</td>
						<td style="width: 50%">@Model.PaymentMethod</td>
					</tr>
					<tr>
						<td style="width: 50%; font-weight: 700">@T("Order.ShippingMethod"):</td>
						<td style="width: 50%">@Model.ShippingMethod</td>
					</tr>
				</table>
			</div>
		</td>
	</tr>
</table>

<h3>@T("PDFInvoice.Product(s)")</h3>

<table style="width: 100%" class="bordered">
	<thead>
		<tr>
			<th class="text-left" style="width: @(colWidths[0])%">@T("PDFInvoice.ProductName")</th>
			@if (Model.ShowSku)
			{
				<th class="text-left" style="width: @(colWidths[2])%">@T("PDFInvoice.SKU")</th>
			}	
			<th class="text-right" style="width: @(colWidths[1])%">@T("PDFInvoice.ProductPrice")</th>
			<th class="text-left" style="width: @(colWidths[2])%">@T("PDFInvoice.ProductQuantity")</th>
			<th class="text-right" style="width: @(colWidths[1])%">@T("PDFInvoice.ProductTotal")</th>
		</tr>
	</thead>
	<tbody>
		@for (int i = 0; i < Model.Items.Count; i++)
		{
			var item = Model.Items[i];
			@OrderLine(item)
		}
	</tbody>
</table>


