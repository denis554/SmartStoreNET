@using SmartStore.Core.Domain.Forums;
@using SmartStore.Web.Models.Boards;
@using SmartStore.Web.Framework.UI;
@model ForumSearchResultModel
@{   
    Layout = "_Layout";

    if (Model.Term.HasValue())
    {
        Html.AddTitleParts(T("Search.PageTitle", "\"" + Model.Term + "\""));
    }
    else
    {
        Html.AddTitleParts(T("Forum.PageTitle.Search"));
    }

    var firstItemIndex = 0;
    var lastItemIndex = 0;
    var suggestions = new string[0];
    if (Model.TotalCount > 0)
    {
        firstItemIndex = Model.SearchResult.Hits.FirstItemIndex;
        lastItemIndex = Model.SearchResult.Hits.LastItemIndex;
        suggestions = Model.SearchResult.SpellCheckerSuggestions;
    }

    var pager = "TODO: pager etc.";
    //var pager = Html.SmartStore().Pager(Model.SearchResult.Hits.PageIndex, Model.SearchResult.Hits.PageSize, Model.TotalCount)
    //    .Name("paginator")
    //    .Alignment(PagerAlignment.Right)
    //    .Route("BoardSearch");
}

<div class="page forum-search">
    <div class="page-title">
        <h1 class="h3">
			@if (Model.Term.HasValue())
			{
				@T("Search.PageTitle", "<small class='search-term'>" + Model.Term + "</small>")
			}
			else
			{
                @T("Forum.Search")
			}
        </h1>
		@if (Model.TotalCount > 0)
		{
			<h5 class="search-hitcount">@T("Search.PagingInfo", "{0}-{1}".FormatInvariant(firstItemIndex.ToString("N0"), lastItemIndex.ToString("N0")), Model.TotalCount.ToString("N0"))</h5>
		}
    </div>

    <div class="page-body">
        <div class="search-input w-75 mt-4 mb-5">
            @if (Model.SearchResult.Facets.Any())
            {
                <div class="mb-4">
                    @{ Html.RenderAction("Filters", new { model = Model }); }
                </div>
            }

            @using (Html.BeginRouteForm("BoardSearch", FormMethod.Get))
            {
                <div class="input-group d-flex mb-3">
                    <input type="text" name="q" class="forum-search-text form-control" value="@Model.Term" placeholder="@T("Forum.SearchForumsTooltip")" />
					<div class="input-group-append">
						<input type="submit" class="btn btn-primary" value="@T("Forum.SearchButton")" />
					</div>
                </div>
            }

		    @if (Model.AttemptedTerm.HasValue())
		    {
			    <div class="alert alert-warning">
				    @T("Search.TermCorrectedHint", "<strong>\"" + Model.Term + "\"</strong>", "<strong>\"" + Model.AttemptedTerm + "\"</strong>")
			    </div>
		    }

		    @if (Model.Error.HasValue())
		    {
			    <div class="alert alert-danger">
				    @Model.Error
			    </div>
		    }
		    else if (Model.TotalCount == 0 && Model.Term.HasValue())
		    {
			    <div class="alert alert-info">
				    @T("Forum.SearchNoResultsText")
			    </div>
		    }

		    @if (suggestions.Any() && (Model.AttemptedTerm.HasValue() || Model.TotalCount == 0))
		    {
			    <p class="search-suggestions">
				    <strong>@T("Search.DidYouMean")</strong>
				    @{ 
					    var links = string.Join(", ", suggestions.Select(x => "<a href='" + Url.RouteUrl("BoardSearch", new { q = x }) + "'>{0}</a>".FormatCurrentUI(x)));
				    }
				    @Html.Raw(links)
			    </p>
		    }
        </div>

        @pager
        <div class="search-results mt-3">
            <div class="topics-group table-responsive">
                @if (Model.TotalCount > 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="topic-name" colspan="2">
                                    @T("Forum.TopicTitle")
                                </th>
                                <th class="replies">
                                    @T("Forum.Replies")
                                </th>
                                <th class="views">
                                    @T("Forum.Views")
                                </th>
                                <th class="last-post">
                                    @T("Forum.LatestPost")
                                </th>
                            </tr>
                        </thead>
                        @foreach (var topic in Model.ForumTopics)
                        {
                            <tr class="topic">
                                <td class="image">
                                    @{
                                        var topicType = "post";
                                        var topicText = string.Empty;
                                        var topicIcon = "fa fa-comment-o";
                                        switch (topic.ForumTopicType)
                                        {
                                            case ForumTopicType.Normal:
                                                topicType = "post";
                                                topicIcon = "fa fa-comment-o";
                                                break;
                                            case ForumTopicType.Sticky:
                                                topicType = "poststicky";
                                                topicIcon = "fa fa-thumb-tack";
                                                topicText = string.Format("<label class='label label-important'>{0}</label>", @T("Forum.Sticky").ToString());
                                                break;
                                            case ForumTopicType.Announcement:
                                                topicType = "post-annoucement";
                                                topicIcon = "fa fa-bullhorn";
                                                topicText = string.Format("<label class='label label-success'>{0}</label>", @T("Forum.Announcement").ToString());
                                                break;
                                            default:
                                                topicType = "post";
                                                topicIcon = "fa fa-comment-o";
                                                break;
                                        }
                                        <div class="@topicType">
                                            <i class="icon @topicIcon"></i>
                                        </div>
                                    }
                                </td>
                                <td class="topic-name">
                                    @if (!string.IsNullOrEmpty(topicText))
                                    {
                                        <span class="topictype" dir="auto">@Html.Raw(topicText)</span>
                                    }
                                    <a href="@(Url.RouteUrl("TopicSlug", new { id = topic.Id, slug = topic.SeName }))@(Html.Raw(topic.AnchorTag))" class="topic-title">
                                        @Html.Raw(Model.SearchResult.Highlight(topic.Subject, "<mark>", "</mark>", false))
                                    </a>
                                    @if (topic.NumPosts > Model.PostsPageSize)
                                    {
                                        @(Html.SmartStore().Pager(topic.TotalPostPages)
                                            .HtmlAttributes(new { @class = "topics-pager" })
                                            .WithRenderer<ForumTopicPagerRenderer>()
                                            .ShowPrevious(false)
                                            .ShowNext(false)
                                            .ItemTitleFormatString(T("Forum.Topics.GotoPostPager"))
                                            .Alignment(PagerAlignment.Left)
                                            .Size(PagerSize.Mini)
                                            .Route("TopicSlug", new { id = topic.Id, slug = topic.SeName }))
                                    }

                                    <div class="topic-starter">
										@if (topic.CustomerId > 0)
										{
											<div class="d-flex">
												<span class="pr-1">@T("Forum.Author"):</span>
												@if (topic.AllowViewingProfiles && !topic.IsCustomerGuest)
												{
													<span>@Html.RouteLink(topic.CustomerName, "CustomerProfile", new { Id = topic.CustomerId })</span>
												}
												else
												{
													<span>@topic.CustomerName</span>
												}
											</div>
                                            if (Model.SearchResult.CanHighlightPostFor(topic.FirstPostId))
                                            {
                                                <div class="mt-2">
                                                    @Html.Raw(Model.SearchResult.Highlight(topic.FirstPostId, "<mark>", "</mark>"))
                                                </div>
                                            }
										}
                                    </div>
                                </td>
                                <td class="replies">
                                    @topic.NumReplies
                                </td>
                                <td class="views">
                                    @topic.Views
                                </td>
                                <td class="last-post">
                                    @{ Html.RenderAction("LastPost", new { forumPostId = @topic.LastPostId, showTopic = false }); }
                                </td>
                            </tr>
                        }
                    </table>
                }
            </div>
        </div>
        @pager
    </div>
</div>
