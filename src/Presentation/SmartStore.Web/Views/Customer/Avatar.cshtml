@using SmartStore.Web.Models.Customer;
@using SmartStore.Web.Framework.UI;
@model CustomerAvatarModel
@{
	Layout = "_MyAccount";
	ViewBag.PageClassToken = "avatar";
	ViewBag.PageTitle = T("Account.Avatar").Text;

	Html.AddTitleParts(T("PageTitle.Account").Text);
}

@if (!ViewData.ModelState.IsValid)
{
	@Html.ValidationSummary(true)
}

<div id="AvatarUploadContainer">
	@if (!Model.AvatarUrl.HasValue())
	{
		<div class="alert alert-info">@T("Account.Avatar.UploadRules", Model.MaxFileSize)</div>
	}

	<div class="mb-2">
		<img src="@Model.AvatarUrl" class="img-thumbnail @(Model.AvatarUrl.HasValue() ? "" : "d-none")" alt="Avatar" style="max-width: 120px;" />
	</div>

	@(Html.SmartStore().FileUploader()
		.Name("uploadedFile")
		.UploadUrl(Url.Action("UploadAvatar", "Customer"))
		.AcceptedFileTypes("gif|jpe?g|png")
		.ShowRemoveButton(Model.AvatarUrl.HasValue())
		.ShowRemoveButtonAfterUpload(true)
		.UploadText(T("Common.FileUploader.Upload"))
		.OnUploadCompletedHandlerName("onAvatarUploaded")
	)
</div>

<script type="text/javascript">
    $(function () {
        var el = $('#AvatarUploadContainer'),
            img = el.find('img'),
            elRemove = el.find('.remove');

		window['onAvatarUploaded'] = function (e, el, data) {
			var result = data.result;
			if (result.success) {
				img.removeClass("d-none");
				img.attr('src', result.avatarUrl);
				elRemove.removeClass("d-none");
			}
		};

        elRemove.click(function (e) {
			$.post('@Url.Action("RemoveAvatar", "Customer")');
			img.attr('src', '@Html.Raw(Model.PictureFallbackUrl)');
			$(this).addClass("d-none");
            e.preventDefault();
        });
    });
</script>
