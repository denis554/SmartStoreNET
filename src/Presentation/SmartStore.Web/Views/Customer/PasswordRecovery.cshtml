@model PasswordRecoveryModel
@using SmartStore.Web.Models.Customer;
@{
    Layout = "_Layout";
    
    Html.AddTitleParts(T("PageTitle.PasswordRecovery").Text);
}

<div class="page password-recovery-page">
    <div class="page-title">
        <h1 class="h3">@T("Account.PasswordRecovery")</h1>
    </div>

    <div class="page-body row">
        <div class="col-12">
            @if (!String.IsNullOrEmpty(Model.ResultMessage))
            {
                <div class="alert @(Model.ResultState == PasswordRecoveryResultState.Success ? "alert-success" : "alert-danger")" >
                    @Model.ResultMessage
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    @T("Account.PasswordRecovery.Tooltip")
                </div>
            }
        </div>

        <div class="col-12">
            @using (Html.BeginForm())
            {
                <fieldset class="content-group">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Email, new { @class = "col-12 col-form-label required" })

                        <div class="col-12">
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.Email, new { @class = "email col-6 form-control" })
                                <input type="submit" name="send-email" class="btn password-recovery-button" value="@T("Account.PasswordRecovery.RecoverButton")" />
                            </div>
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>
