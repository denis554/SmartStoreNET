@model PasswordRecoveryModel
@using SmartStore.Web.Models.Customer;
@{
    Layout = "_Layout";
    
    Html.AddTitleParts(T("PageTitle.PasswordRecovery").Text);
}

<div class="page password-recovery-page">
    <div class="page-title">
        <h1>@T("Account.PasswordRecovery")</h1>
    </div>

    <div class="page-body">
        @if (!String.IsNullOrEmpty(Model.ResultMessage))
        {
            <div class="alert alert-@(Model.ResultState == PasswordRecoveryResultState.Success ? "success" : "danger")" >
                @Model.ResultMessage
            </div>
        }
        else
        {
            <p class="lead">
                @T("Account.PasswordRecovery.Tooltip")
            </p>
        }

        @using (Html.BeginForm())
        {
            <div class="form-group row mt-4">
                <div class="col-12 col-lg-8 col-xl-7">
                    <div class="input-group input-group-lg has-icon">
						<span class="input-group-icon text-muted">
							<i class="icm icm-envelope-open" style="line-height: inherit"></i>
						</span>
                        @Html.TextBoxFor(model => model.Email, new { @class = "email form-control", type = "email", placeholder = Html.DisplayNameFor(m => m.Email) })
						<span class="input-group-append">
							<input type="submit" name="send-email" class="btn btn-primary password-recovery-button" value="@T("Common.Submit")" />
						</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
        }
    </div>
</div>
