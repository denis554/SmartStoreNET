@model WishlistModel
@using SmartStore.Web.Models.ShoppingCart;

@{
    int descMaxLength = Model.ShowProductImages ? 120 : 140;
    int attrMaxLength = Model.ShowProductImages ? 50 : 70;
}

<div class="offcanvas-cart-body">
	@if (Model.Items.Count == 0) 
	{
		<div class="no-items">
			<h4 class="no-item-title">
				@T("ShoppingCart.Mini.EmptyWishlist.Title")
			</h4>
			<p class="no-item-icon">
				<i class="fa fa-heart-o fa-4x"></i>
			</p>
			<p class="no-item-info text-muted">
				@T("ShoppingCart.Mini.EmptyWishlist.Info", "fa fa-lg fa-heart-o")
			</p>
		</div>
	}

    @if (Model.Items.Count > 0)
	{
		// Items added in the last 2 seconds are considered to be current
		var currentItem = Model.Items.FirstOrDefault(x => x.CreatedOnUtc >= DateTime.UtcNow.AddSeconds(-2));

		if (currentItem != null)
		{
			<div class="alert alert-success alert-dismissible fade in" role="alert">
				<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
				@Html.Raw(T("ShoppingCart.Mini.AddedItemToWishlist", "<strong>" + currentItem.ProductName.Truncate(50, "...") + "</strong>").Text)
			</div>
		}

		<ul class="items list-unstyled">
            @for (int i = 0, length = Model.Items.Count; i < length; i++)
            {
                var item = Model.Items[i];
                string itemClass = "item clearfix";
                if (!Model.ShowProductImages)
                {
                    itemClass += " no-thumb";
                }
                if (i == 0)
                {
                    itemClass += " alpha";
                }

            <li class="@itemClass card text-xs-center">
                @if (Model.ShowProductImages)
                {
                    <figure class="picture pull-left pull-xs-none">
                        @if (item.Picture.ImageUrl.HasValue())
						{
                            <a href="@item.ProductUrl" title="@item.Picture.Title">
                                <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                            </a>
						}
                    </figure>
                }

                <div class="data pull-left text-xs-left">
                    <a class="name" href="@item.ProductUrl" title="@item.ProductName">@item.ProductName</a>
                    <p class="short-desc">
                        @Html.Raw(item.ShortDesc.Truncate(descMaxLength, "..."))
                    </p>
                    @if (item.AttributeInfo.HasValue())
                    {
                        <br />
                        <span class="attributes text-muted" title="@item.AttributeInfo">
                            @Html.Raw(item.AttributeInfo.Truncate(attrMaxLength, "..."))
                        </span>
                    }
                </div>

                <div class="price pull-right">
                    @item.UnitPrice
                </div>

                <div class="toolbar">
                    <div class="qty-input@(item.QuantityUnitName.HasValue() ? " has-postfix" : "")">
                        <input class="form-control form-control-sm input-sm" type="text" value="@item.EnteredQuantity"
                               data-update-url="@(Url.Action("UpdateOcCartItem", "ShoppingCart"))" data-type="wishlist" data-sci-id="@item.Id" 
                               data-min="@item.MinOrderAmount" data-max="@item.MaxOrderAmount" data-postfix="@item.QuantityUnitName" data-step="@item.QuantityStep"  />
                    </div>

                    @if (Model.ShowItemsFromWishlistToCartButton)
                    {
                        <a class="btn btn-secondary btn-sm btn-icon ajax-cart-link" title='@T("ShoppingCart.AddToCart")'
                            href="#"
                            rel="nofollow"
                            data-href="@Url.Action("AddOneItemtoCartFromWishlist", "ShoppingCart", new { cartItemId = item.Id })"
                            data-name="@item.ProductName"
                            data-type="cart"
                            data-action="addfromwishlist">
                            <i class="fa fa-cart-arrow-down"></i>
                        </a>
                    }

                    <a class="btn btn-danger btn-sm btn-icon remove ajax-cart-link"
                       href="#"
                       rel="nofollow"
                       data-href='@Url.Action("DeleteCartItem", "ShoppingCart", new { cartItemId = item.Id, wishlistItem = true })'
                       data-name="@item.ProductName"
                       data-type="wishlist"
                       data-action="remove"
                       title='@T("Common.Remove")'>
                        <i class="fa fa-trash-o"></i>
                    </a>
                </div>
            </li>

            }
        </ul>
    }
</div>

@if (Model.Items.Count > 0)
{
    <div class="offcanvas-cart-footer clearfix">
        <a class="btn btn-primary pull-left" href="@Url.RouteUrl("Wishlist")">
            @T("Wishlist.Mini.ViewWishlist")
        </a>
    </div>
}