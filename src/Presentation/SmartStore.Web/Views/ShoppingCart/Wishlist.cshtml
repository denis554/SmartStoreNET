@model WishlistModel
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Web.Models.Checkout;
@using SmartStore.Web.Models.ShoppingCart;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
}
<div class="page wishlist-page">
    <div class="page-title">
        <h1>
            @if (Model.IsEditable)
            {
                @T("Wishlist")
            }
            else
            {
                @String.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname);
            }
        </h1>
    </div>
    <div class="clear">
    </div>
    <div class="page-body">
        <div class="wishlist-content">
            @if (Model.Items.Count > 0)
            {
                if (Model.Warnings.Count > 0)
                {
                <div class="alert alert-error">
                    @for (int i = 0; i < Model.Warnings.Count; i++)
                    {
                        <p>@Model.Warnings[i]</p>
                    }
                </div>
                }
                using (Html.BeginRouteForm("Wishlist", FormMethod.Post))
                {
                <table class="cart table table-striped">
                    <thead>
                        <tr class="cart-header-row">
                            @if (Model.IsEditable)
                            {
                                <th>
                                    @T("ShoppingCart.Remove")
                                </th>
                            }
                            @if (Model.DisplayAddToCart)
                            {
                                <th>
                                    <span class="nobr">
                                        @T("ShoppingCart.AddToCart")
                                    </span>
                                </th>
                            }
                            @if (Model.ShowSku)
                            {
                                <th>
                                    @T("ShoppingCart.SKU")
                                </th>
                            }
                            @if (Model.ShowProductImages)
                            {
                                <th class="picture"></th>
                            }
                            <th>
                                @T("ShoppingCart.Product(s)")
                            </th>
                            <th class="unit-price">
                                @T("ShoppingCart.UnitPrice")
                            </th>
                            <th>
                                @T("ShoppingCart.Quantity")
                            </th>
                            <th class="omega">
                                @T("ShoppingCart.ItemTotal")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr class="cart-item-row">
                                @if (Model.IsEditable)
                                {
                                    <td class="remove">
                                        <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                    </td>
                                }
                                @if (Model.DisplayAddToCart)
                                {
                                    <td class="addtocart">
                                        <input type="checkbox" name="addtocart" value="@(item.Id)" />
                                    </td>
                                }
                                @if (Model.ShowSku)
                                {
                                    <td class="nobr">
                                        @item.Sku
                                    </td>
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <td class="productpicture nobr">
                                        <img class="img-polaroid" alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                    </td>
                                }
                                <td class="product">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="View details">@item.ProductName</a>
                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                    {
                                        <div class="attributes muted">
                                            @Html.Raw(item.AttributeInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                    {
                                        <div class="recurring-info">
                                            @Html.Raw(item.RecurringInfo)
                                        </div>
                                    }
                                    @if (item.Warnings.Count > 0)
                                    {
                                        <div class="alert alert-error">
                                            @for (int i = 0; i < item.Warnings.Count; i++)
                                            {
                                                <p>@item.Warnings[i]</p>
                                            }
                                        </div>
                                    }
                                </td>
                                <td class="unit-price nobr">
                                    <span class="product-unit-price">@item.UnitPrice</span>
                                </td>
                                <td class="nobr">
                                    @if (Model.IsEditable)
                                    {
                                        if (item.AllowedQuantities.Count > 0)
                                        {
                                        <select name="itemquantity@(item.Id)" class="qty-dropdown noskin">
                                            @foreach (var qty in item.AllowedQuantities)
                                            {
                                                <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                            }
                                        </select>
                                        }
                                        else
                                        {
                                            <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input"/>
                                        }
                                    }
                                    else
                                    {
                                        <span>@item.Quantity</span>
                                    }
                                </td>
                                <td class="nobr text-success omega">
                                    <span class="product-subtotal">@item.SubTotal</span>
                                    @if (!String.IsNullOrEmpty(item.Discount))
                                    {
                                        <div class="discount">
                                            @T("ShoppingCart.ItemYouSave"): @item.Discount
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>                
                       
                <div>
                    <div class="common-buttons clearfix">
                        @if (Model.IsEditable)
                        {
                            <button type="submit" name="updatecart" value="updatecart" class="btn update-wishlist-button">
                                <i class="icon-refresh"></i>
                                @T("Wishlist.UpdateCart")
                            </button>
                        }
                        @if (Model.DisplayAddToCart)
                        {
                            <button type="submit" name="addtocartbutton" value="addtocartbutton" class="btn btn-primary wishlist-add-to-cart-button">
                                <i class="icon-shopping-cart"></i>
                                @T("ShoppingCart.AddToCart")
                            </button>
                        }
                        @if (Model.IsEditable && Model.EmailWishlistEnabled)
                        {
                            <a class="btn email-a-friend-wishlist-button" href="@Url.RouteUrl("EmailWishlist")">
                                <i class="icon-envelope"></i>
                                @T("Wishlist.EmailAFriend")
                            </a>
                        }
                    </div>
                </div>        
                }
            }
            else
            {
                @T("Wishlist.CartIsEmpty")
            }
        </div>

        @if (Model.IsEditable && Model.Items.Count > 0)
        {
            <div class="share-info well">
                <h4 class="share-label">
                    <i class="icon-share"></i>
                    @T("Wishlist.YourWishlistURL")
                </h4>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">
                    @Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")
                </a>
            </div>
        }
    </div>
</div>
