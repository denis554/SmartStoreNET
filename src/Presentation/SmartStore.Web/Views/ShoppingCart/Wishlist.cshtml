@model WishlistModel
@using SmartStore.Web.Models.ShoppingCart;
@{
    Layout = "_Layout";
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    Html.AddBodyCssClass("no-offcanvas-cart");
}

@helper SimpleProduct(WishlistModel.ShoppingCartItemModel item)
{
	<tr class="cart-item-row">
		@if (Model.IsEditable)
		{
			<td class="remove">
				<input type="checkbox" name="removefromcart" value="@item.Id" />
			</td>
		}
		@if (Model.DisplayAddToCart)
		{
			<td class="addtocart">
				<input type="checkbox" name="addtocart" value="@item.Id" />
			</td>
		}
		@if (Model.ShowSku)
		{
			<td class="text-nowrap">
				@item.Sku
			</td>
		}
		@if (Model.ShowProductImages)
		{
			<td class="productpicture text-nowrap">
				@if (item.Picture.ImageUrl.HasValue())
				{
					<img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
				}
			</td>
		}
		<td class="product">
			<a href="@item.ProductUrl" title="@T("Products.Details")">@item.ProductName</a>

			@if (Model.DisplayShortDesc && !String.IsNullOrEmpty(item.ShortDesc))
			{
				<div class="short-desc">
					@item.ShortDesc
				</div>
			}
			
			@if (!String.IsNullOrEmpty(item.AttributeInfo))
			{
				<div class="attributes text-muted">
					@Html.Raw(item.AttributeInfo)
				</div>
			}
			@if (!String.IsNullOrEmpty(item.RecurringInfo))
			{
				<div class="recurring-info">
					@Html.Raw(item.RecurringInfo)
				</div>
			}
			@if (item.Warnings.Count > 0)
			{
				<div class="alert alert-danger">
					@for (int i = 0; i < item.Warnings.Count; i++)
					{
						<p>@item.Warnings[i]</p>
					}
				</div>
			}
		</td>
		<td class="unit-price text-nowrap">
			<span class="product-unit-price">@item.UnitPrice</span>
		</td>
		<td class="text-nowrap" style="width:170px">
			@if (Model.IsEditable)
            {
                @Html.EditorFor(x => item, "QtyInput", new { htmlAttributes = new { id = "itemquantity{0}".FormatWith(item.Id), Name = "itemquantity{0}".FormatWith(item.Id) } })
            }
            else
            {
                <span>@item.EnteredQuantity</span>
            }
		</td>
		<td class="text-nowrap text-success omega">
			<span class="product-subtotal">@item.SubTotal</span>
			@if (!String.IsNullOrEmpty(item.Discount))
			{
				<div class="discount">
					@T("ShoppingCart.ItemYouSave"): @item.Discount
				</div>
			}
		</td>
	</tr>	
}

@helper BundleProducts(WishlistModel.ShoppingCartItemModel parentItem)
{
	if (parentItem.ChildItems != null)
	{	
		foreach (var item in parentItem.ChildItems.OrderBy(x => x.BundleItem.DisplayOrder))
		{
			<tr class="product-bundle-row">
				@if (Model.IsEditable)
				{
					<td>&nbsp;</td>
				}
				@if (Model.DisplayAddToCart)
				{
					<td>&nbsp;</td>
				}
				@if (Model.ShowSku)
				{
					<td>&nbsp;</td>
				}
				@if (Model.ShowProductImages)
				{
					<td>&nbsp;</td>
				}
				<td class="product">
					<div class="bundle-item">
						@if (Model.ShowProductBundleImages)
						{
							<div class="bundle-item-image" style="@("min-width: {0}px; min-height: {0}px;".FormatWith(Model.BundleThumbSize + 10))">
								@if (item.Picture.ImageUrl.HasValue() && !item.BundleItem.HideThumbnail)
								{
									<img src="@item.Picture.ImageUrl" alt="@item.Picture.AlternateText" title="@item.Picture.Title" />
								}
							</div>
						}						
						<div class="bundle-item-body">
							<div class="bundle-item-name">
								@if (item.VisibleIndividually)
								{
									<a href="@item.ProductUrl" title="@T("Products.Details")">@item.ProductName</a>
								}
								else
								{
									@item.ProductName
								}
								@if (item.EnteredQuantity > 1 && item.BundlePerItemShoppingCart)
								{
									<text>
										&#215;&nbsp;@item.EnteredQuantity
									</text>
								}
							</div>
							@if (Model.DisplayShortDesc && !String.IsNullOrWhiteSpace(item.ShortDesc))
							{
								<div class="bundle-item-description">
									@Html.Raw(item.ShortDesc)
								</div>
							}
							@if (!String.IsNullOrEmpty(item.AttributeInfo))
							{
								<div class="bundle-item-attribute-info text-muted">
									@Html.Raw(item.AttributeInfo)
								</div>
							}
							@if (item.Warnings.Count > 0)
							{
								<div class="alert alert-danger">
									@foreach (var warning in item.Warnings)
									{
										<p>@warning</p>
									}
								</div>
							}
						</div>
					</div>
				</td>
				<td class="unit-price text-nowrap">
					@if (!String.IsNullOrWhiteSpace(item.BundleItem.PriceWithDiscount))
					{
						<span class="text-muted">
							@Html.Raw(item.BundleItem.PriceWithDiscount)
						</span>
					}
					else
					{
						<text>&nbsp;</text>
					}
				</td>
				<td class="text-nowrap">
					&nbsp;
				</td>
				<td class="text-nowrap text-success omega">
					&nbsp;
				</td>
			</tr>
		}	
	}
}

<div class="page wishlist-page">
    <div class="page-title">
        <h1>@(Model.IsEditable ? T("Wishlist") : T("Wishlist.WishlistOf", Model.CustomerFullname))</h1>
    </div>
    <div class="page-body">
        <div class="wishlist-content">
            @if (Model.Items.Count > 0)
            {
                if (Model.Warnings.Count > 0)
                {
                    <div class="alert alert-danger">
                        @for (int i = 0; i < Model.Warnings.Count; i++)
                        {
                            <p>@Model.Warnings[i]</p>
                        }
                    </div>
                }

                using (Html.BeginRouteForm("Wishlist", FormMethod.Post))
                {
                    <div class="card mb-4">
                        <div id="cart-items" class="cart cart-editable mb-0">
                            <div class="cart-head">
                                <div class="cart-row">
                                    <div class="cart-col cart-col-main">
                                        @T("ShoppingCart.Product(s)")
                                    </div>
                                    <div class="cart-col cart-col-price">
                                        @T("ShoppingCart.UnitPrice")
                                    </div>
                                    <div class="cart-col cart-col-qty">
                                        @T("ShoppingCart.Quantity")
                                    </div>
                                    <div class="cart-col cart-col-price cart-col-subtotal">
                                        @T("ShoppingCart.ItemTotal")
                                    </div>
                                </div>
                            </div>
                            <div class="cart-body">
                                @{ Html.RenderPartial("WishlistItems", Model); }
                            </div>
                        </div>
                    </div>

                    <div class="common-buttons clearfix">
                        @if (Model.IsEditable && Model.EmailWishlistEnabled)
                        {
                            <a class="btn btn-secondary email-a-friend-wishlist-button" href="@Url.Action("EmailWishlist")" rel="nofollow">
                                <i class="fa fa-envelope"></i>
                                <span>@T("Wishlist.EmailAFriend")</span>
                            </a>
                        }
                        @if (Model.DisplayAddToCart && !Model.IsEditable)
                        {
                            <button type="submit" name="addtocartbutton" value="addtocartbutton" class="btn btn-primary float-right wishlist-add-to-cart-button">
                                <i class="fa fa-cart-arrow-down"></i>
                                <span>@T("ShoppingCart.AddToCart")</span>
                            </button>
                        }						
                    </div>
                }
            }
            else
            {
				<div class="alert alert-warning fade show">
					@T("Wishlist.CartIsEmpty")
				</div>
            }
        </div>

        @if (Model.IsEditable && Model.Items.Count > 0)
        {
            <div class="share-info my-5">
                <h4 class="share-label">
					<i class="fa fa-share-square-o"></i>
                    @T("Wishlist.YourWishlistURL")
                </h4>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">
                    @Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")
                </a>
            </div>
        }
    </div>
</div>

@if (Model.IsEditable)
{
    <script type="text/javascript">

        var orderSummary = $(".wishlist-content");

        // remove cart item & move to wishlist
        orderSummary.on("click", ".ajax-action-link", function (e) {
            e.preventDefault();
            var link = $(this);
            updateShoppingCartItems(link, link.data);
            return false;
        });

        // quantity touchspin change
        orderSummary.on('change', '.qty-input .form-control', function (e) {
            e.preventDefault();
            var link = $(this);
            updateShoppingCartItems(link, { "sciItemId": link.data("sci-id"), "newQuantity": link.val(), "isCartPage": true, "isWishlist": true });
            return false;
        });

        function updateShoppingCartItems(link, data) {
            $.ajax({
                cache: false,
                url: link.data("href"),
                data: data,
                type: 'POST',
                success: function (response) {

                    if (response.cartItemCount == 0) {
                        orderSummary.html('<div class="alert alert-warning fade show">@T("Wishlist.CartIsEmpty")</div>');
                        $(".share-info").hide();
                    }

                    var cartBody = $(".cart-body");
                    var totals = $("#order-totals");

                    if (response.success) {
                        // replace html
                        cartBody.html(response.cartHtml);
                        totals.html(response.totalsHtml);
                    }

                    displayNotification(response.message, response.success ? "success" : "error");

                    // reinit qty ctls
                    applyCommonPlugins(cartBody);

                    // update shopbar
                    ShopBar.loadSummary("wishlist", true);
                    
                    if (link.data("type") == "cart") {
                        ShopBar.loadSummary("cart", true);
                    }
                }
            });
        }
    </script>
}
