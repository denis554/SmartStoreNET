@model ReturnRequestModel
@using SmartStore.Core.Domain.Orders;
@using Telerik.Web.Mvc.UI;
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Id)
        </td>
        <td class="adminData">
            @Model.Id
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ProductName)
        </td>
        <td class="adminData">
            @Html.ActionLink(Model.ProductName, "Edit", "ProductVariant", new { id = Model.ProductVariantId }, new { })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Quantity)
        </td>
        <td class="adminData">
            @Model.Quantity
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.OrderId)
        </td>
        <td class="adminData">
            @Html.ActionLink(T("Admin.Common.View").Text, "Edit", "Order", new { id = Model.OrderId }, new { })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CustomerId)
        </td>
        <td class="adminData">
            @Html.ActionLink(T("Admin.Common.View").Text, "Edit", "Customer", new { id = Model.CustomerId }, new { })
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ReturnRequestStatusId)
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.ReturnRequestStatusId, ((ReturnRequestStatus)Model.ReturnRequestStatusId).ToSelectList())
            @Html.ValidationMessageFor(model => model.ReturnRequestStatusId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ReasonForReturn)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.ReasonForReturn)
            @Html.ValidationMessageFor(model => model.ReasonForReturn)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.RequestedAction)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.RequestedAction)
            @Html.ValidationMessageFor(model => model.RequestedAction)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CustomerComments)
        </td>
        <td class="adminData">
            @Html.TextAreaFor(model => model.CustomerComments, new { style = "Width: 500px; Height: 150px;" })
            @Html.ValidationMessageFor(model => model.CustomerComments)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.StaffNotes)
        </td>
        <td class="adminData">
            @Html.TextAreaFor(model => model.StaffNotes, new { style = "Width: 500px; Height: 150px;" })
            @Html.ValidationMessageFor(model => model.StaffNotes)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CreatedOn)
        </td>
        <td class="adminData">
            @Html.DisplayFor(model => model.CreatedOn)
        </td>
    </tr>
</table>
