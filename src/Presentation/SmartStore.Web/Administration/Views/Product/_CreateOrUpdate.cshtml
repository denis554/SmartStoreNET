@model ProductModel

@using SmartStore.Core.Domain.Catalog;
@using Telerik.Web.Mvc.UI;
@using SmartStore.Web.Framework.UI;

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
	$(function () {
		var productId = $("#product-edit").data("product-id");

		var initialTab = $('#product-edit li.active > a');
		var initialPane = $("#product-edit").find(initialTab.attr("href"));
		if (!initialPane.data("loaded")) {
			loadEditPartial(initialPane);
		}

		function loadEditPartial(pane, onComplete) {
			$.ajax({
				cache: false,
				type: "GET",
				async: false,
				global: false,
				url: '@(Url.Action("LoadEditPartial", new { id = Model.Id }))',
				data: { partialName: pane.data("part") },
				success: function (data) {
					pane.html(data);
					applyCommonPlugins(pane);
				},
				error: function (xhr, ajaxOptions, thrownError) {
					pane.html("Error while loading template: " + thrownError);
				},
				complete: function (xhr, textStatus) {
					pane.data("loaded", true);
					if (_.isFunction(onComplete)) {
						onComplete.apply(this);
					}
				}
			});
		}

		$('#product-edit a[data-toggle="tab"]').on('show', function (e) {
			var newTab = $(e.target),
				prevTab = $(e.relatedTarget),
				icon = newTab.find(">i"),
				iconPrevClass = icon.attr('class');

			var pane = $("#product-edit").find(newTab.attr("href"));
			if (pane.data("loaded") || !_.isString(pane.data("part")))
				return;

			icon.removeClass(iconPrevClass).addClass("icon-fixed-width icon-spinner icon-spin");

			loadEditPartial(pane, function () {
				icon.removeClass("icon-fixed-width icon-spinner icon-spin").addClass(iconPrevClass);
			});
		})
	});
</script>

@Html.SmartStore().TabStrip().Name("product-edit").HtmlAttributes(new { data_product_id = Model.Id }).Style(TabsStyle.Tabs).Position(TabsPosition.Left).Items(x =>
{
	x.Add().Text(T("Admin.Catalog.Products.Info").Text)
		.Icon("icon-pencil icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Info", data_loaded = "true" })
		.Content(TabInfo())
		.Selected(true);
	
	if (Model.Id > 0)
	{
		if (Model.ProductTypeId == (int)ProductType.GroupedProduct)
		{
			x.Add().Text(T("Admin.Catalog.Products.AssociatedProducts").Text)
				.Icon("icon-link icon-fixed-width")
				.ContentHtmlAttributes(new { data_part = "AssociatedProducts" })
				.Content(TabAssociatedProducts());
		}
		else if (Model.ProductTypeId == (int)ProductType.BundledProduct)
		{
			x.Add().Text(T("Admin.Catalog.Products.BundleItems").Text)
				.Icon("icon-link icon-fixed-width")
				.ContentHtmlAttributes(new { data_part = "BundleItems" })
				.Content(TabBundleItems());
		}
	}

	if (Model.ProductTypeId != (int)ProductType.GroupedProduct)
	{
		x.Add().Text(T("Admin.Catalog.Products.Price").Text)
			.Icon("icon-barcode icon-fixed-width")
			.ContentHtmlAttributes(new { data_part = "Price" })
			.Content(TabPrice());
	}

	x.Add().Text(T("Admin.Catalog.Products.Discounts").Text)
		.Icon("icon-signal icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Discounts" })
		.Content(TabDiscounts());

	x.Add().Text(T("Admin.Catalog.Products.Pictures").Text)
		.Icon("icon-picture icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Pictures" })
		.Content(TabPictures());
	x.Add().Text(T("Admin.Catalog.Products.Categories").Text)
		.Icon("icon-sitemap icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Categories" })
		.Content(TabCategories());
	x.Add().Text(T("Admin.Catalog.Products.Manufacturers").Text)
		.Icon("icon-truck icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Manufacturers" })
		.Content(TabManufacturers());

	x.Add().Text(T("Admin.Catalog.Products.Promotion").Text)
		.Icon("icon-bullhorn icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Promotion" })
		.Content(TabPromotion());

	if (Model.ProductTypeId != (int)ProductType.BundledProduct)
	{
		x.Add().Text(T("Admin.Catalog.Products.ProductVariantAttributes.Attributes").Text)
			.Icon("icon-list-alt icon-fixed-width")
			.ContentHtmlAttributes(new { data_part = "Attributes" })
			.Content(TabAttributes());
	}

	x.Add().Text(T("Admin.Catalog.Products.SpecificationAttributes").Text)
		.Icon("icon-reorder icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "SpecificationAttributes" })
		.Content(TabSpecificationAttributes());

	x.Add().Text(T("Admin.Common.SEO").Text)
		.Icon("icon-globe icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "SEO" })
		.Content(TabSeo());
	x.Add().Text(T("Admin.Catalog.Products.Acl").Text)
		.Icon("icon-group icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Acl" })
		.Content(TabAcl());
	x.Add().Text(T("Admin.Common.Stores").Text)
		.Icon("icon-globe icon-fixed-width")
		.ContentHtmlAttributes(new { data_part = "Stores" })
		.Content(TabStores());

	//generate an event
	EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "product-edit", this.Html, this.Model));
})

@helper TabInfo()
{
    @Html.Partial("_CreateOrUpdate.Info", Model)
}

@helper TabAssociatedProducts()
{
	@*@Html.Partial("_CreateOrUpdate.AssociatedProducts", Model)*@
}

@helper TabBundleItems()
{
	@*@Html.Partial("_CreateOrUpdate.BundleItems", Model)*@
}

@helper TabPrice()
{
	@*@Html.Partial("_CreateOrUpdate.Price", Model)*@
}

@helper TabDiscounts()
{
    @*@Html.Partial("_CreateOrUpdate.Discounts", Model)*@
}

@helper TabPictures()
{
    @*@Html.Partial("_CreateOrUpdate.Pictures", Model)*@
}
@helper TabCategories()
{
    @*@Html.Partial("_CreateOrUpdate.Categories", Model)*@
}
@helper TabManufacturers()
{
    @*@Html.Partial("_CreateOrUpdate.Manufacturers", Model)*@
}

@helper TabPromotion()
{
    @*@Html.Partial("_CreateOrUpdate.Promotion", Model)*@
}

@helper TabAttributes()
{
	@*@Html.Partial("_CreateOrUpdate.Attributes", Model)*@
}
	
@helper TabSpecificationAttributes()
{
    @*@Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)*@
}

@helper TabSeo()
{
    @*@Html.Partial("_CreateOrUpdate.SEO", Model)*@
}
@helper TabAcl()
{
    @*@Html.Partial("_CreateOrUpdate.Acl", Model)*@
}
@helper TabStores()
{
    @*@Html.Partial("_CreateOrUpdate.Stores", Model)*@
}
