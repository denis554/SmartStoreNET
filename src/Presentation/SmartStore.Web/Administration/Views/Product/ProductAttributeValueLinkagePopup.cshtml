@model ProductModel.ProductVariantAttributeValueModel.AddProductLinkageModel
@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}
@{
	var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

	ViewBag.Title = T("Admin.Catalog.Products.ProductVariantAttributes.Attributes.Values.Fields.LinkedProduct.AddNew").Text;
}

@using Telerik.Web.Mvc.UI;

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            @T("Admin.Catalog.Products.ProductVariantAttributes.Attributes.Values.Fields.LinkedProduct.AddNew")
        </div>
    </div>    
    
    if (ViewBag.RefreshPage == true)
    {
    <script type="text/javascript">
		try {
			window.opener.document.getElementById('@(ViewBag.openerProductId)').value = '@(ViewBag.productId)';
			window.opener.document.getElementById('@(ViewBag.openerProductName)').value = '@(ViewBag.productName)';
			window.opener.document.getElementById('linked-product-name').innerHTML = '@(ViewBag.productName)';
			window.opener.toggleLinkageButtons();
		}
		catch (e){} 
		window.close();
    </script>
    }

    @Html.HiddenFor(model => model.ProductId)
	
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SearchProductName)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SearchCategoryId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories, T("Admin.Common.All").Text)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SearchManufacturerId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers, T("Admin.Common.All").Text)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SearchStoreId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchStoreId", Model.AvailableStores)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SearchProductTypeId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchProductTypeId", Model.AvailableProductTypes)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                &nbsp;
            </td>
            <td class="adminData">
				<button type="submit" id="search-products" value="search-products" class="btn">
					<i class="icon-search"></i>&nbsp;@T("Admin.Common.Search")
				</button>
            </td>
        </tr>
    </table>

    <p></p>

    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<ProductModel>()
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Id)
							.ClientTemplate("<input type='button' value='" + @T("Admin.Telerik.GridLocalization.Select").Text + "' onclick='addLinkage(<#= Id #>)' class='t-button' />")
							.Title(T("Admin.Telerik.GridLocalization.Select").Text)
                            .Width(50);
                        columns.Bound(x => x.Name)
							.Template(x => @Html.LabeledProductName(0, x.Name, x.ProductTypeName, x.ProductTypeLabelHint))
							.ClientTemplate(@Html.LabeledProductName(null, "Name"));
                        columns.Bound(x => x.Sku);
                        columns.Bound(x => x.Published)
                            .Template(item => @Html.SymbolForBool(item.Published))
                            .ClientTemplate(@Html.SymbolForBool("Published"))
                            .Centered()
                            .Width(100);
                    })
					.Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
					.DataBinding(dataBinding => dataBinding.Ajax().Select("ProductAttributeValueLinkagePopupList", "Product"))
					.ClientEvents(events => events.OnDataBinding("productLinkage_onDataBinding"))
					.EnableCustomBinding(true))
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" id="save" name="save" value="@T("Admin.Common.Save")" class="hide" />
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('#search-products').click(function () {
                var grid = $('#products-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
            	if (event.keyCode == 13) {
            		$("#search-products").click();
            		return false;
            	}
            });
        });
        
		function productLinkage_onDataBinding(e) {
            var searchModel = {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                SearchCategoryId: $('#SearchCategoryId').val(),
                SearchManufacturerId: $('#SearchManufacturerId').val(),
                SearchStoreId: $('#SearchStoreId').val(),
                SearchProductTypeId: $('#SearchProductTypeId').val()
            };
            e.data = searchModel;
        }
        
		function addLinkage(productid) {
            $('#@Html.FieldIdFor(model => model.ProductId)').val(productid);
            $('#save').click();
        }
    </script>
}