@model ProductModel
@using Telerik.Web.Mvc.UI;

<div>
    <h3>@T("Admin.Catalog.Products.RelatedProducts")</h3>

    @if (Model.Id > 0)
    {
        <table class="adminContent">
            <tr>
                <td>
                    @(Html.Telerik().Grid<ProductModel.RelatedProductModel>()
                    .Name("relatedproducts-grid")
                    .DataKeys(keys =>
                    {
                        keys.Add(x => x.Id);
                    })
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax()
                            .Select("RelatedProductList", "Product", new { productId = Model.Id })
                            .Update("RelatedProductUpdate", "Product")
                            .Delete("RelatedProductDelete", "Product");
                    })
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Product2Name)
                            .ReadOnly()
							.Width(520)
							.ClientTemplate(@Html.LabeledProductName("ProductId2", "Product2Name"));
                        columns.Bound(x => x.Product2Sku)
                            .ReadOnly();
                        columns.Bound(x => x.Product2Published)
                            .ReadOnly()
                            .ClientTemplate(@Html.SymbolForBool("Product2Published"))
                            .Centered();
                        columns.Bound(x => x.DisplayOrder)
                            .Centered();
                        columns.Command(commands =>
                        {
                            commands.Edit().Localize(T);
                            commands.Delete().Localize(T);
                        }).Width(280);
                    })
                    .EnableCustomBinding(true))

                </td>
            </tr>
            <tr>
                <td>
                    <button type="button" id="AddRelatedProductButton" class="btn btn-warning btn-below" data-loading-text="@(T("Common.Loading"))&hellip;">
                        <i class="fa fa-plus"></i>
                        @T("Admin.Catalog.Products.RelatedProducts.AddNew")
                    </button>

					<button type="button" id="btnCreateMutuallyRelatedProducts" class="btn btn-below" data-url="@Url.Action("CreateAllMutuallyRelatedProducts", new { productId = Model.Id })"
							data-ask="@T("Admin.Common.AskCreateMutuallyAssociations")">
						<i class="fa fa-random"></i>
						@T("Admin.Common.CreateMutuallyAssociations")
					</button>
                </td>
            </tr>
        </table>
    }
    else
    {
        <div class="alert alert-danger">
            @T("Admin.Catalog.Products.RelatedProducts.SaveBeforeEdit")
        </div>
    }
</div>

<div style="margin-top:30px;">
    <h3>@T("Admin.Catalog.Products.CrossSells")</h3>

    @if (Model.Id > 0)
    {
        <table class="adminContent">
            <tr>
                <td>
                    @(Html.Telerik().Grid<ProductModel.CrossSellProductModel>()
                    .Name("crosssellproducts-grid")
                    .DataKeys(keys =>
                    {
                        keys.Add(x => x.Id);
                    })
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax()
                            .Select("CrossSellProductList", "Product", new { productId = Model.Id })
                            .Delete("CrossSellProductDelete", "Product");
                    })
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Product2Name)
                            .ReadOnly()
							.Width(520)
							.ClientTemplate(@Html.LabeledProductName("ProductId2", "Product2Name"));
                        columns.Bound(x => x.Product2Sku);
                        columns.Bound(x => x.Product2Published)
                            .ClientTemplate(@Html.SymbolForBool("Product2Published"))
                            .Centered();
                        columns.Command(commands =>
                        {
                            commands.Delete().Localize(T);
                        }).Width(280);
                    })
                    .EnableCustomBinding(true))
                </td>
            </tr>
            <tr>
                <td width="100%">
                    <button type="submit" id="btnAddNewCrossSellProduct" name="btnAddNewCrossSellProduct" class="btn btn-warning btn-below"
                            onclick="javascript:OpenWindow('@(Url.Action("CrossSellProductAddPopup", "Product", new { productId = Model.Id, btnId = "btnRefreshCrossSellProducts", formId = "product-form" }))', 1000, 700, true); return false;">
                        <i class="fa fa-plus"></i>
                        @T("Admin.Catalog.Products.CrossSells.AddNew")
                    </button>
					<button type="button" id="btnCreateMutuallyCrossSellProducts" class="btn btn-below" data-url="@Url.Action("CreateAllMutuallyCrossSellProducts", new { productId = Model.Id })"
							data-ask="@T("Admin.Common.AskCreateMutuallyAssociations")">
						<i class="fa fa-random"></i>
						@T("Admin.Common.CreateMutuallyAssociations")
					</button>

                    <input type="submit" id="btnRefreshCrossSellProducts" name="btnRefreshCrossSellProducts" style="display: none" />
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('#btnRefreshCrossSellProducts').click(function () {
                                //refresh grid
                                var optionsGrid = $("#crosssellproducts-grid");
                                optionsGrid.data('tGrid').ajaxRequest();

                                //return false to don't reload a page
                                return false;
                            });
                        });
                    </script>
                </td>
            </tr>
        </table>
    }
    else
    {
        <div class="alert alert-danger">
            @T("Admin.Catalog.Products.CrossSells.SaveBeforeEdit")
        </div>
    }
</div>

<script type="text/javascript">
	$(document).ready(function () {
		// mutually create related or cross sell products
		$('#btnCreateMutuallyRelatedProducts, #btnCreateMutuallyCrossSellProducts').click(function () {
			$(this).doAjax({
				callbackSuccess: function (resp) {
					alert(resp.Message);
				}
			});
		});

		// add related products
		$(document).on('click', '#AddRelatedProductButton', function () {

			$({}).entityPicker('loadDialog', {
				url: '@Url.Action("EntityPicker", "Common", new { area = "" })',
				caption: '@T("Admin.Catalog.Products.RelatedProducts.AddNew")',
				onLoadDialogBefore: function () {
					$('#AddRelatedProductButton').button('loading').prop('disabled', true);
				},
				onLoadDialogComplete: function () {
					$('#AddRelatedProductButton').prop('disabled', false).button('reset');
				},
				onOkClicked: function (ids) {
					$({}).doAjax({
						type: 'POST',
						url: '@Url.Action("RelatedProductAdd")',
						data: { "productId": @Model.Id, "selectedProductIds": ids },
						callbackSuccess: function () {
							$('#relatedproducts-grid').data('tGrid').ajaxRequest();
						}
					});
					return true;
				}
			});

		});
	});
</script>