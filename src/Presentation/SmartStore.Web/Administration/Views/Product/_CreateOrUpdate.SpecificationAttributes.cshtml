@model ProductModel

@using Telerik.Web.Mvc.UI;

@if (Model.Id > 0)
{
    /*hide "add spec" table if no attributes are defined*/
    if (Model.AddSpecificationAttributeModel.AvailableAttributes.Count > 0)
    {
        <div>
            @(Html.Telerik().Grid<ProductSpecificationAttributeModel>()
                .Name("specificationattributes-grid")
                .DataKeys(x =>
                {
                    x.Add(y => y.Id).RouteKey("psaId");
                })
                .Columns(columns =>
                {
                    columns.Bound(x => x.SpecificationAttributeName).Width(200).ReadOnly();
                    columns.Bound(x => x.SpecificationAttributeOptionName).Width(200).ReadOnly();
                    columns.Bound(x => x.AllowFiltering)
                        .Width(100)
                        .Template(item => @Html.SymbolForBool(item.AllowFiltering))
                        .ClientTemplate(@Html.SymbolForBool("AllowFiltering"))
                        .Centered();
                    columns.Bound(x => x.ShowOnProductPage)
                        .Width(100)
                        .Template(item => @Html.SymbolForBool(item.ShowOnProductPage))
                        .ClientTemplate(@Html.SymbolForBool("ShowOnProductPage"))
                        .Centered();
                    columns.Bound(x => x.DisplayOrder).Width(100);
                    columns.Command(commands =>
                    {
                        commands.Edit().Localize(T);
                        commands.Delete().Localize(T);
                    }).Width(180);

                })
                .Editable(x =>
                {
                    x.Mode(GridEditMode.InLine);
                })
                .DataBinding(dataBinding =>
                {
                    dataBinding.Ajax().Select("ProductSpecAttrList", "Product", new { productId = Model.Id })
                        .Update("ProductSpecAttrUpdate", "Product")
                        .Delete("ProductSpecAttrDelete", "Product");
                })
                .EnableCustomBinding(true))
        </div>
        <div style="margin-top:10px;">
            <h3 class="bordered">@T("Admin.Catalog.Products.SpecificationAttributes.AddNew")</h3>
        </div>
        <script type="text/javascript">
            $(function() {
                $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId)").change(function() {

                    var selectedItem = $(this).val();
                    var ddlSpecOptions = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)")
                    $.ajax({
                        cache:false,
                        type: "GET",
                        url: "@(Url.Action("GetOptionsByAttributeId", "SpecificationAttribute"))",
                        data: { "attributeId": selectedItem },
                        success: function (data) {
                            ddlSpecOptions.html('');
                            $.each(data, function(id, option) {
                                ddlSpecOptions.append($('<option></option>').val(option.id).html(option.name));
                            });
                            ddlSpecOptions.trigger("change");
                        },
                        error:function (xhr, ajaxOptions, thrownError){
                            alert('Failed to retrieve specification options.')
                        }
                    });
                });
            });

            $(document).ready(function () {
                $('#addProductSpec').click(function () {
                    var specificationAttributeOptionId = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)").val();
                    var allowFiltering = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.AllowFiltering)").is(':checked');
                    var showOnProductPage = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)").is(':checked');
                    var displayOrder = $("#@Html.FieldIdFor(model => model.AddSpecificationAttributeModel.DisplayOrder)").val();

                    $('#addProductSpec').attr('disabled', true);
                    $.ajax({
                        cache:false,
                        type: "POST",
                        url: "@(Url.Action("ProductSpecificationAttributeAdd", "Product"))",
                        data: { "specificationAttributeOptionId": specificationAttributeOptionId, "allowFiltering": allowFiltering, "showOnProductPage": showOnProductPage, "displayOrder": displayOrder, "productId": @Model.Id },
                        success: function (data) {
                                var specificationAttributesGrid = $("#specificationattributes-grid");
                                specificationAttributesGrid.data('tGrid').ajaxRequest();
                                $('#addProductSpec').attr('disabled', false);
                        },
                        error:function (xhr, ajaxOptions, thrownError){
                            alert('Failed to add specification attribute.')
                            $('#addProductSpec').attr('disabled', false);
                        }
                    });
                });
            });
        </script>
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId)
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId, Model.AddSpecificationAttributeModel.AvailableAttributes)
                    @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeId)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId, Model.AddSpecificationAttributeModel.AvailableOptions)
                    @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.SpecificationAttributeOptionId)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.AddSpecificationAttributeModel.AllowFiltering)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.AddSpecificationAttributeModel.AllowFiltering)
                    @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.AllowFiltering)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)
                    @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.ShowOnProductPage)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.AddSpecificationAttributeModel.DisplayOrder)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.AddSpecificationAttributeModel.DisplayOrder)
                    @Html.ValidationMessageFor(model => model.AddSpecificationAttributeModel.DisplayOrder)
                </td>
            </tr>
            <tr>
                <td></td>
                <td align="left" style="padding-top:10px">
                    <button type="button" name="addProductSpec" id="addProductSpec" class="btn btn-warning">
                        <i class="icon-plus"></i>
                        @T("Admin.Catalog.Products.SpecificationAttributes.AddButton")
                    </button>
                </td>
            </tr>
        </table>
    }
    else
    {
        <div class="alert alert-danger">
            @T("Admin.Catalog.Products.SpecificationAttributes.NoAttributes")
        </div>
    }
}
else
{
    <div class="alert alert-danger">
        @T("Admin.Catalog.Products.SpecificationAttributes.SaveBeforeEdit")
    </div>
}
