@using SmartStore.Core.Domain.DataExchange;
@using SmartStore.Admin.Models.DataExchange;
@using Telerik.Web.Mvc.UI;
@{
	ViewBag.Title = T("Common.Export").Text;
}

<div class="section-header">
    <div class="title">
		<i class="fa fa-arrow-circle-o-down"></i>
        @T("Common.Export")
    </div>
    <div class="options">
        <a href="@Url.Action("Create")" class="btn btn-primary export-profile-button"><i class="fa fa-plus"></i>&nbsp;@T("Admin.Common.AddNew")</a>
    </div>
</div>

<form id="ProfileExportForm" method="POST" action="@Url.Action("Execute", "Export", new { area = "Admin" })">
	<input type="hidden" name="Id" value="" />
	<input type="hidden" name="ExportAll" value="true" />
</form>

<script type="text/javascript">
	function onRowDataBound_ExportProfiles(e) {
		if (!e.dataItem.Enabled) {
			$(e.row).find('td').wrapInner('<span class="muted" />');
		}
	}
</script>

<div>
	<table class="adminContent">
		<tr>
			<td>
				@(Html.Telerik().Grid<ExportProfileModel>()
					.Name("export-profile-grid")
					.DataKeys(keys => keys.Add(x => x.Id)
					.RouteKey("Id"))
					.Columns(columns =>
					{
						columns.Bound(x => x.Provider.ThumbnailUrl)
							.Width(70)
							.Centered()
							.ClientTemplate("<img alt='<#= Id #>' src='<#= Provider.ThumbnailUrl #>' />");
						columns.Bound(x => x.Name)
							.Width(400)
							.ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= Name #></a>");
						columns.Bound(x => x.Provider.SystemName)
							.ClientTemplate("<#= Provider.FriendlyName #> <span class='muted'>(<#= Provider.SystemName #>)</span>");
						columns.Bound(x => x.Enabled)
							.Width(100)
							.ClientTemplate(@Html.SymbolForBool("Enabled"))
							.Centered();
						columns.Bound(x => x.Provider.EntityTypeName);
						columns.Bound(x => x.Provider.FileExtension)
							.Centered();
						columns.Bound(x => x.LastExecution)
							.ClientTemplate(
								"<!-- TODO --><button type=\"button\" class=\"btn btn-primary export-button\" data-id=\"<#= Id #>\"><i class=\"fa fa-play\"></i>&nbsp;" + @T("Admin.Common.ExportAll") + "</button>"
							)
							.ReadOnly();
					})
			.DataBinding(dataBinding => dataBinding.Ajax().Select("List", "Export"))
			.ClientEvents(events => events.OnRowDataBound("onRowDataBound_ExportProfiles"))
			.EnableCustomBinding(true))
			</td>
		</tr>
	</table>
</div>

<div id="export-profile-dialog" class="modal modal-large hide fade" tabindex="-1" data-urldelete="@Url.Action("Delete")" data-profile="@T("Common.Profile")">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal"><b>x</b></button>
		<h4 class="caption"></h4>
	</div>
	<div class="modal-body"></div>
	<div class="modal-ask-delete hide">@T("Admin.Common.DeleteConfirmation")</div>
	<div class="modal-footer">
		<button class="btn btn-primary">@T("Common.OK")</button>
		<button class="btn" data-dismiss="modal">@T("Common.Cancel")</button>
	</div>
</div>

<script type="text/javascript">
	jQuery(document).ready(function () {
		var dialog = $('#export-profile-dialog');

		// export clicked
		$(document).on('click', '.export-button', function (e) {
			e.preventDefault();
			var form = $('#ProfileExportForm');
			form.find('input[name=Id]').val($(this).attr('data-id'));
			form.submit();
			return false;
		});

		// show profile dialog
		$(document).on('click', '.export-profile-button', function (e) {
			e.preventDefault();
			var isDelete = $(this).hasClass('export-profile-delete');

			if (isDelete) {
				$({}).doAjax({
					type: 'POST',
					url: dialog.attr('data-urldelete'),
					ask: dialog.find('.modal-ask-delete').text(),
					callbackSuccess: function (resp) {
						refreshGrid(forExport);
					}
				});
				return false;
			}

			dialog.find('.modal-body').empty();
			dialog.find('.caption').text(dialog.attr('data-profile') + ' - ' + $.trim($(this).text()));
			showPrimaryButton(false);

			$(this).doAjax({
				type: 'GET',
				smallIcon: dialog.find('.modal-body'),
				callbackSuccess: function (resp) {
					dialog.find('.modal-body').html(resp);
					$('select[name="Provider.SystemName"]').selectWrapper();
					toggleProviderDescription();
				},
				callbackComplete: function () {
					showPrimaryButton(true);
				}
			});

			dialog.modal('show');
			return false;
		});

		// submit dialog form
		dialog.on('click', '.btn-primary', function () {
			var form = dialog.find('.export-profile-form');

			if (!form.length) {
				dialog.modal('hide');
				return;
			}

			form.submit();
		});

		// selected provider changed
		$(document).on('change', 'select[name="Provider.SystemName"]', toggleProviderDescription);


		function refreshGrid() {
			setTimeout(function () {
				$('#export-profile-grid').data('tGrid').ajaxRequest();
			}, 500);
		}

		function showPrimaryButton(display) {
			var button = $('#export-profile-dialog').find('.btn-primary').toggle(display);
		}

		function toggleProviderDescription() {
			var val = dialog.find('select[name="Provider.SystemName"]').val().replace('.', '');
			dialog.find('.export-provider-description').hide();
			$('#ExportProviderDescription' + val).fadeIn('fast');
		}
	});
</script>
