@using Telerik.Web.Mvc;
@using SmartStore.Services.Customers;
@using SmartStore.Web.Framework.UI;
@using SmartStore.Core;
@using SmartStore.Services.Localization;
@using SmartStore.Core.Domain.Localization;
@using SmartStore;

@{
    var currentCustomer = this.WorkContext.CurrentCustomer;
    var usernamesEnabled = EngineContext.Current.Resolve<SmartStore.Core.Domain.Customers.CustomerSettings>().UsernamesEnabled;
    var currentVersion = SmartStoreVersion.CurrentVersion;
    var currentUICulture = System.Threading.Thread.CurrentThread.CurrentUICulture;
    
    // resources
    var localizationService = EngineContext.Current.Resolve<ILocalizationService>();
    
    // styles
    Html.AppendCssFileParts(@Url.Content("~/Administration/Content/theme.less"));
    
    //page title
    string adminPageTitle = "";
    if (!String.IsNullOrWhiteSpace(ViewBag.Title))
    {
        adminPageTitle = ViewBag.Title + " / ";
    }
    adminPageTitle += T("Admin.PageTitle").Text;
}
<!DOCTYPE html>
<html class="no-js not-ready loading">
<head>
    <title>@adminPageTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge; chrome=1" />

    <script>
        window.Res = {
            "Common.Notification": "@T("Common.Notification").ToString().EncodeJsString()",
        }
    </script>
    
    @Html.Partial("ConditionalComments")

    @Styles.Render(
        "~/Content/jquery-ui/base/css",
        "~/Content/telerik/common/css")
    @Html.SmartCssFiles(ResourceLocation.Head)
    @Styles.Render("~/Content/shared-ui")

    @Scripts.Render("~/bundles/jquery")
    <script>
        // globals
        // jquery CDN fallback
        if (typeof jQuery == 'undefined') {
            var e = document.createElement('script');
            e.src = '@Url.Content("~/Scripts/jquery-1.8.3.js")';
            e.type = 'text/javascript';
            document.getElementsByTagName("head")[0].appendChild(e);
        }
    </script>

    @Scripts.Render(
        "~/bundles/modernizr",
        "~/bundles/jquery-ui-core",
        "~/bundles/jquery-ui",
        "~/bundles/jquery-val",
        "~/bundles/system",
        "~/bundles/bootstrap",
        "~/bundles/bootstrap-custom",
        "~/bundles/shared-ui",
        "~/bundles/admin/app")

    @* codehint: sm-add (globalization) *@
    @Html.MetaAcceptLanguage()
    <script src="~/Scripts/jquery.globalize/globalize.js"></script>
    <script src='@Url.Content("~/Scripts/jquery.globalize/cultures/globalize.culture.{0}.js".FormatInvariant(currentUICulture.ToString()))'></script>
    <script>

        $(document).ready(function () {
            // Ask ASP.NET what culture we prefer, because we stuck it in a meta tag
            var data = $("meta[name='accept-language']").attr("content")
            // Tell jQuery to figure it out also on the client side.
            Globalize.culture(data || "en-US");
            if ($.fn.datepicker) {
                // globalize bootstrap datepicker
                var c = Globalize.culture().calendars.standard;
                $.fn.datepicker.defaults = {
                    format: Globalize.culture().calendars.standard.patterns['d'].toLowerCase(),
                    weekStart: Globalize.culture().calendars.standard.firstDay,
                    autoclose: true,
                    todayHighlight: true
                };
                $.fn.datepicker.dates['glob'] = {
                    days: c.days.names,
                    daysShort: c.days.namesShort,
                    daysMin: c.days.namesAbbr,
                    months: c.months.names,
                    monthsShort: c.months.namesAbbr,
                    today: "Today" // TODO: Localize
                };
            }
        });

        jQuery.extend(jQuery.validator.methods, {
            // Use the Globalization plugin to parse some values
            number: function (value, element) {
                return this.optional(element) || !isNaN(Globalize.parseFloat(value));
            },
            date: function (value, element) {
                return this.optional(element) || !isNaN(Globalize.parseDate(value));
            },
            range: function (value, element, param) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || (val >= param[0] && val <= param[1]);
            }
        });
    </script>

    @Html.SmartScripts(ResourceLocation.Head)

    <link rel="shortcut icon" href="~/Administration/favicon.ico" />

</head>
<body class="@Html.BodyCssClass()"@(Html.BodyId())>   

    <div id="page">
		@if (ViewData["warning.panel.message"] != null)
		{
			<div class="warning-panel-message fade in">
                <button type="button" class="close" data-dismiss="alert">×</button>
                @Html.Raw(ViewData["warning.panel.message"])
			</div>
		}

        @if (IsSectionDefined("navbar"))
        {
            @RenderSection("navbar")
        }
        else
        {
            @Html.Widget("admin_navbar_before")
            @Html.Partial("Navbar")
            @Html.Widget("admin_navbar_after")
        }

        <div id="breadcrumb">
            <!-- SiteMapPath here-->
            @Html.Widget("admin_breadcrumb").ToString().Trim()
        </div>

        @Html.Widget("admin_content_before")
        <div id="content">
            @Html.Partial("_Notifications")
            <div class="cph">
                @RenderBody()
            </div>
        </div>
        @Html.Widget("admin_content_after")

    </div>


    <!--These need to be at the end of the page to ensure that all the controls requiring scripts have been rendered-->
    @(Html.Telerik().ScriptRegistrar()
            .jQuery(false)
            .jQueryValidation(false)
            .Globalization(true) // codehint: sm-add
            )
    @Html.SmartCssFiles(ResourceLocation.Foot)
    @Html.SmartScripts(ResourceLocation.Foot)

</body>
</html>

