@model int?
@using SmartStore.Core;
@using SmartStore.Web.Framework.UI;
@using SmartStore.Utilities;

@functions {
    private bool TransientUpload
    {
        get
        {
            if (ViewData.ContainsKey("transientUpload"))
            {
                var x = ViewData["transientUpload"].Convert<bool>();
                return x;
            }
            return false;
        }
    }

    private bool ValidatePicture
    {
        get
        {
            if (ViewData.ContainsKey("validate"))
            {
                var x = ViewData["validate"].Convert<bool>();
                return x;
            }
            return true;
        }
    }
}

@{
	var random = CommonHelper.GenerateRandomInteger();
	var clientId = "picture" + random;
	var pictureService = this.CommonServices.PictureService;
	var mediaSettings = this.CommonServices.Resolve<SmartStore.Core.Domain.Media.MediaSettings>();
	int pictureId = Model.HasValue ? Model.Value : 0;
	var picture = pictureService.GetPictureById(pictureId);

	Html.AddScriptParts("~/bundles/fileupload");
	Html.AddCssFileParts("~/css/fileupload");
}

<div id="@clientId" class="fileupload form-row align-items-center" data-upload-url='@Url.Action("AsyncUpload", "Picture", new { isTransient = TransientUpload, validate = ValidatePicture, area = "Admin" })'>
	<div class="col-auto">
		@Html.HiddenFor(x => x, new { @class = "hidden" })
		<img src="@Url.Picture(pictureId, mediaSettings.ProductThumbPictureSize)" style="max-width: 100px; max-height: 64px" class="img-thumbnail" alt="" />
	</div>

	<div class="col-auto">
		<button class="btn btn-danger remove@(picture == null ? " hide" : "")">
			@*<i class="fa fa-trash-o"></i>*@
			<span>@T("Common.Remove")</span>
		</button>

		<span class="btn btn-secondary fileinput-button">
			<i class="fa fa-upload"></i>
			<span>@T("Common.Fileuploader.Upload")</span>
			<input id="fileupload-@random" type="file" name="file" />
		</span>

		<button class="btn btn-outline-secondary cancel hide">
			@*<i class="fa fa-times"></i>*@
			<span>@T("Common.Fileuploader.Cancel")</span>
		</button>
	</div>

	<div class="col">
		<!-- The global progress information -->
		<div class="fileupload-progress fade">
			<!-- The global progress bar -->
			<div class="progress">
				<div class="progress-bar progress-bar-striped progress-bar-animated bg-success active" role="progressbar" style="width: 0%" aria-valuemin="0" aria-valuemax="100"></div>
			</div>

			<!-- The extended global progress information -->
			<div class="progress-extended fs-xs text-muted">&nbsp;</div>
		</div>
	</div>
</div>

<script>
    $(function () {
        var el = $('#@clientId'),
            img = el.find('img'),
            elHidden = el.find('.hidden'),
            elRemove = el.find('.remove'),
            elCancel = el.find('.cancel')
            elFile = el.find('.fileinput-button');

        $('#@clientId').fileupload({
            url: el.data('upload-url'),
            dataType: 'json',
            //acceptFileTypes: /^image\/(gif|jpeg|jpg|png)$/,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        	pasteZone: null,

            done: function (e, data) {
                var result = data.result;
                if (result.success) {
                    img.attr('src', result.imageUrl);
                    elHidden.val(result.pictureId);
                    elRemove.removeClass("hide");

					elCancel.addClass("hide");
					elFile.removeClass("hide");
                }
            },

            error: function (jqXHR, textStatus, errorThrown) {
                if (errorThrown === 'abort') {
                    //alert('File Upload has been canceled');
                }
            }
        });

        elRemove.on('click', function (e) {
            img.attr('src', '@pictureService.GetFallbackUrl(mediaSettings.ProductThumbPictureSize)');
            elHidden.val(0);
			$(this).addClass("hide");
            e.preventDefault();
        });

        $("#addProductPicture").on("click", function () {
            elRemove.trigger("click");
        });
    });
</script>
