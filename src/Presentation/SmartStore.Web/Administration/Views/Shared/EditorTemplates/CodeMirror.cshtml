
@functions {
	private string ModelTree
	{
		get
		{
			if (ViewData.ContainsKey("ModelTree"))
			{
				return ViewData["ModelTree"].Convert<string>();
			}

			return null;
		}
	}
}

@{ 
	var cdn = "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.32.0/";

	Html.AddScriptParts(true,
		cdn + "codemirror.min.js",
		cdn + "addon/hint/show-hint.min.js",
		"~/Content/editors/CodeMirror/liquid.js",
		//cdn + "addon/hint/xml-hint.min.js",
		//cdn + "addon/hint/html-hint.min.js",
		//cdn + "addon/hint/css-hint.min.js",
		//cdn + "addon/hint/javascript-hint.min.js",
		cdn + "addon/fold/xml-fold.min.js",
		cdn + "addon/fold/foldcode.min.js",
		cdn + "addon/edit/closetag.min.js",
		cdn + "addon/edit/closebrackets.min.js",
		cdn + "addon/edit/matchtags.min.js",
		cdn + "addon/mode/multiplex.min.js",
		cdn + "addon/mode/overlay.min.js",
		cdn + "mode/xml/xml.min.js",
		cdn + "mode/javascript/javascript.min.js",
		cdn + "mode/css/css.min.js",
		cdn + "mode/htmlmixed/htmlmixed.min.js",
		cdn + "addon/selection/active-line.min.js",
		cdn + "addon/edit/matchbrackets.min.js");

	Html.AddCssFileParts(true,
		cdn + "codemirror.min.css",
		cdn + "addon/hint/show-hint.min.css",
		cdn + "theme/eclipse.min.css",
		"~/Content/editors/CodeMirror/liquid.css");
}

<script type="text/javascript">
    $(function () {
		if (window.CodeMirror !== undefined) {
            var el = $('#@ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty)');
            CodeMirror.fromTextArea(el[0], {
				mode: "htmlmixedliquid",
				theme: "eclipse",
				lineNumbers: true,
				lineWrapping: true,
                tabSize: 2,
				smartIndent: true,
				matchTags: true,
				matchBrackets: true,
				autoCloseTags: true,
				autoCloseBrackets: true,
				styleActiveLine: true,
				continueComments: "Enter",
				extraKeys: {
					//"'.'": completeAfter,
					//"'{'": completeAfter,
					"Ctrl-Q": "autocomplete"
				},
				hintOptions: {
					hint: CodeMirror.hint.liquid,
					modelTree: @Html.Raw(ModelTree.HasValue() ? "JSON.parse('" + ModelTree +  "')" : "null")
				}
			});

			function completeAfterDot(cm) {
				return completeAfter(cm, function () {
					var cur = cm.getCursor();
					return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) == "<";
				});
			}

			function completeAfter(cm, pred) {
				var cur = cm.getCursor();
				
				if (!pred || pred()) setTimeout(function () {
					if (!cm.state.completionActive) {
						cm.showHint({ completeSingle: false });
					}	
				}, 100);
				return CodeMirror.Pass;
			}
        }
    });
</script>

<style>
	.CodeMirror {
		border: 1px solid rgba(0,0,0, 0.25);
		height: 500px;
	}
</style>

@Html.TextArea(string.Empty, /* Name suffix */
			   (string)ViewData.TemplateInfo.FormattedModelValue, /* Initial value */
			   new { @class = "form-control", style = "max-width: initial;", rows = 20 }
)

