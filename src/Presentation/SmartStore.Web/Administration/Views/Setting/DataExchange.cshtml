@model DataExchangeSettingsModel
@{
    ViewBag.Title = T("Admin.Common.DataExchange").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <i class="fa fa-exchange"></i>
            @T("Admin.Common.DataExchange")
        </div>
        <div class="options">
            <button type="submit" name="save" value="save" class="btn btn-primary"><i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")</button>
        </div>
    </div>
    
	@Html.Action("StoreScopeConfiguration", "Setting")
	@Html.ValidationSummary(false)
    
    @(Html.SmartStore().TabStrip().Name("dataexchangesettings-edit").Items(x =>
	{
		x.Add().Text(T("Admin.Common.General").Text).Content(@TabGeneral()).Selected(true);
		x.Add().Text(T("Common.Import").Text).Content(@TabImport());  
    }))
}

@helper TabGeneral()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.MaxFileNameLength)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.MaxFileNameLength)
                @Html.ValidationMessageFor(model => model.MaxFileNameLength)
            </td>
        </tr>
    </table>
}

@helper TabImport()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ImageImportFolder)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ImageImportFolder)
                @Html.ValidationMessageFor(model => model.ImageImportFolder)
            </td>
        </tr>
    </table>
}