@model CatalogSettingsModel
@{
	ViewBag.Title = T("Admin.Configuration.Settings.Catalog").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <i class="fa fa-book"></i>
            @T("Admin.Configuration.Settings.Catalog")
        </div>
        <div class="options">
            <button type="submit" name="save" value="save" class="btn btn-warning">
				<i class="fa fa-check"></i>
				<span>@T("Admin.Common.Save")</span>
			</button>
        </div>
    </div>

    Html.RenderAction("StoreScopeConfiguration", "Setting"); 

    @Html.ValidationSummary(false)

    @(Html.SmartStore().TabStrip().Name("catalogsettings-edit").Style(TabsStyle.Material).Items(x =>
	{
		x.Add().Text(T("Admin.Configuration.Settings.Catalog.MiscSettings").Text).Content(@TabMiscSettings()).Selected(true);
		x.Add().Text(T("Admin.Configuration.Settings.Catalog.ProductListSettings").Text).Content(@TabProductListSettings());
		x.Add().Text(T("Admin.Configuration.Settings.Catalog.ProductDetailSettings").Text).Content(@TabProductDetailSettings());
		x.Add().Text(T("Admin.Configuration.Settings.Catalog.UserSettings").Text).Content(@TabUserSettings());
        x.Add().Text(T("Admin.Catalog.Manufacturers").Text).Content(@TabBrandsSettings());
	}))
    
@helper TabMiscSettings()
{
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="head">@T("Admin.CatalogSettings.Homepage")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowBestsellersOnHomepage)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowBestsellersOnHomepage, Html.CheckBoxFor(model => model.ShowBestsellersOnHomepage, new { data_toggler_for = "#pnlNumberOfBestsellersOnHomepage" }))
                @Html.ValidationMessageFor(model => model.ShowBestsellersOnHomepage)
            </td>
        </tr>
        <tr id="pnlNumberOfBestsellersOnHomepage">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.NumberOfBestsellersOnHomepage)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.NumberOfBestsellersOnHomepage)
                @Html.ValidationMessageFor(model => model.NumberOfBestsellersOnHomepage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowPopularProductTagsOnHomepage)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowPopularProductTagsOnHomepage)
                @Html.ValidationMessageFor(model => model.ShowPopularProductTagsOnHomepage)
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Admin.CatalogSettings.ProductDisplay")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowProductSku)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowProductSku)
                @Html.ValidationMessageFor(model => model.ShowProductSku)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerPartNumber)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowManufacturerPartNumber)
                @Html.ValidationMessageFor(model => model.ShowManufacturerPartNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowGtin)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowGtin)
                @Html.ValidationMessageFor(model => model.ShowGtin)
            </td>
        </tr>

        <tr id="pnlDisplayWeight">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowWeight)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowWeight)
                @Html.ValidationMessageFor(model => model.ShowWeight)
            </td>
        </tr>
        <tr id="pnlDisplayDimensions">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDimensions)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDimensions)
                @Html.ValidationMessageFor(model => model.ShowDimensions)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDiscountSign)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDiscountSign)
                @Html.ValidationMessageFor(model => model.ShowDiscountSign)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDefaultQuantityUnit)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDefaultQuantityUnit)
                @Html.ValidationMessageFor(model => model.ShowDefaultQuantityUnit)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDefaultDeliveryTime)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDefaultDeliveryTime)
                @Html.ValidationMessageFor(model => model.ShowDefaultDeliveryTime)
            </td>
        </tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DeliveryTimeIdForEmptyStock)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.DeliveryTimeIdForEmptyStock, @Html.DropDownListFor(model => model.DeliveryTimeIdForEmptyStock, Model.AvailableDeliveryTimes, T("Common.Unspecified")))
				@Html.ValidationMessageFor(model => model.DeliveryTimeIdForEmptyStock)
			</td>
		</tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HideProductDefaultPictures)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.HideProductDefaultPictures)
                @Html.ValidationMessageFor(model => model.HideProductDefaultPictures)
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Admin.CatalogSettings.Prices")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.DisplayTextForZeroPrices)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.DisplayTextForZeroPrices)
                @Html.ValidationMessageFor(model => model.DisplayTextForZeroPrices)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PriceDisplayStyle)
            </td>
            <td class="adminData">
                @Html.EnumSettingEditorFor(model => model.PriceDisplayStyle)
                @Html.ValidationMessageFor(model => model.PriceDisplayStyle)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.IgnoreDiscounts)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.IgnoreDiscounts)
                @Html.ValidationMessageFor(model => model.IgnoreDiscounts)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ApplyTierPricePercentageToAttributePriceAdjustments)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ApplyTierPricePercentageToAttributePriceAdjustments)
                @Html.ValidationMessageFor(model => model.ApplyTierPricePercentageToAttributePriceAdjustments)
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Admin.CatalogSettings.CompareProducts")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.CompareProductsEnabled)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.CompareProductsEnabled, Html.CheckBoxFor(model => model.CompareProductsEnabled, new { data_toggler_for = "#pnlCompareProducts" }))
                @Html.ValidationMessageFor(model => model.CompareProductsEnabled)
            </td>
        </tr>
		<tbody id="pnlCompareProducts">
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.IncludeShortDescriptionInCompareProducts)
				</td>
				<td class="adminData">
					@Html.SettingEditorFor(model => model.IncludeShortDescriptionInCompareProducts)
					@Html.ValidationMessageFor(model => model.IncludeShortDescriptionInCompareProducts)
				</td>
			</tr>
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.IncludeFullDescriptionInCompareProducts)
				</td>
				<td class="adminData">
					@Html.SettingEditorFor(model => model.IncludeFullDescriptionInCompareProducts)
					@Html.ValidationMessageFor(model => model.IncludeFullDescriptionInCompareProducts)
				</td>
			</tr>
		</tbody>
    </table>
    
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Common.Misc")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EnableHtmlTextCollapser)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.EnableHtmlTextCollapser, Html.CheckBoxFor(model => model.EnableHtmlTextCollapser, new { data_toggler_for = "#pnlHtmlTextCollapsedHeight" }))
                @Html.ValidationMessageFor(model => model.EnableHtmlTextCollapser)
            </td>
        </tr>
        <tr id="pnlHtmlTextCollapsedHeight">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HtmlTextCollapsedHeight)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.HtmlTextCollapsedHeight, null, new { postfix = T("Common.Pixel").Text })
                @Html.ValidationMessageFor(model => model.HtmlTextCollapsedHeight)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.MaxItemsToDisplayInCatalogMenu)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.MaxItemsToDisplayInCatalogMenu)
                @Html.ValidationMessageFor(model => model.MaxItemsToDisplayInCatalogMenu)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.IgnoreFeaturedProducts)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.IgnoreFeaturedProducts)
                @Html.ValidationMessageFor(model => model.IgnoreFeaturedProducts)
            </td>
        </tr>
    </table>
}

@helper TabProductListSettings()
{
	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.ShowProductsFromSubcategories)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.ShowProductsFromSubcategories)
				@Html.ValidationMessageFor(model => model.ShowProductsFromSubcategories)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.IncludeFeaturedProductsInNormalLists)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.IncludeFeaturedProductsInNormalLists, Html.CheckBoxFor(model => model.IncludeFeaturedProductsInNormalLists, new { data_toggler_for = "#pnlIncludeFeaturedProductsInSubPages" }))
				@Html.ValidationMessageFor(model => model.IncludeFeaturedProductsInNormalLists)
			</td>
		</tr>
		<tr id="pnlIncludeFeaturedProductsInSubPages">
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.IncludeFeaturedProductsInSubPages)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.IncludeFeaturedProductsInSubPages)
				@Html.ValidationMessageFor(model => model.IncludeFeaturedProductsInSubPages)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.SubCategoryDisplayType)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.SubCategoryDisplayType, @Html.DropDownListFor(model => model.SubCategoryDisplayType, Model.AvailableSubCategoryDisplayTypes))
				@Html.ValidationMessageFor(model => model.SubCategoryDisplayType)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.ShowSubCategoriesInSubPages)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.ShowSubCategoriesInSubPages)
				@Html.ValidationMessageFor(model => model.ShowSubCategoriesInSubPages)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.ShowDescriptionInSubPages)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.ShowDescriptionInSubPages)
				@Html.ValidationMessageFor(model => model.ShowDescriptionInSubPages)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.AllowProductSorting)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.AllowProductSorting)
				@Html.ValidationMessageFor(model => model.AllowProductSorting)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DefaultViewMode)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.DefaultViewMode, @Html.DropDownListFor(model => model.DefaultViewMode, Model.AvailableDefaultViewModes))
				@Html.ValidationMessageFor(model => model.DefaultViewMode)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.GridStyleListColumnSpan)
			</td>
			<td class="adminData">
				@Html.EnumSettingEditorFor(model => model.GridStyleListColumnSpan)
				@Html.ValidationMessageFor(model => model.GridStyleListColumnSpan)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DefaultSortOrder)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.DefaultSortOrder, @Html.DropDownListFor(model => model.DefaultSortOrder, Model.AvailableSortOrderModes))
				@Html.ValidationMessageFor(model => model.DefaultSortOrder)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.AllowProductViewModeChanging)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.AllowProductViewModeChanging)
				@Html.ValidationMessageFor(model => model.AllowProductViewModeChanging)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DefaultProductListPageSize)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.DefaultProductListPageSize)
				@Html.ValidationMessageFor(model => model.DefaultProductListPageSize)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DefaultPageSizeOptions)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.DefaultPageSizeOptions)
				@Html.ValidationMessageFor(model => model.DefaultPageSizeOptions)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.PriceDisplayType)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.PriceDisplayType, @Html.DropDownListFor(model => model.PriceDisplayType, Model.AvailablePriceDisplayTypes))
				@Html.ValidationMessageFor(model => model.PriceDisplayType)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.HideCategoryDefaultPictures)
			</td>
			<td class="adminData">
				@Html.SettingEditorFor(model => model.HideCategoryDefaultPictures)
				@Html.ValidationMessageFor(model => model.HideCategoryDefaultPictures)
			</td>
		</tr>
	</table>

    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Admin.Catalog.Products")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowShortDescriptionInGridStyleLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowShortDescriptionInGridStyleLists)
                @Html.ValidationMessageFor(model => model.ShowShortDescriptionInGridStyleLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDeliveryTimesInProductLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDeliveryTimesInProductLists)
                @Html.ValidationMessageFor(model => model.ShowDeliveryTimesInProductLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerInGridStyleLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowManufacturerInGridStyleLists)
                @Html.ValidationMessageFor(model => model.ShowManufacturerInGridStyleLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerLogoInLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowManufacturerLogoInLists)
                @Html.ValidationMessageFor(model => model.ShowManufacturerLogoInLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowBasePriceInProductLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowBasePriceInProductLists)
                @Html.ValidationMessageFor(model => model.ShowBasePriceInProductLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowProductOptionsInLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowProductOptionsInLists)
                @Html.ValidationMessageFor(model => model.ShowProductOptionsInLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowColorSquaresInLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowColorSquaresInLists)
                @Html.ValidationMessageFor(model => model.ShowColorSquaresInLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HideBuyButtonInLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.HideBuyButtonInLists)
                @Html.ValidationMessageFor(model => model.HideBuyButtonInLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.LabelAsNewForMaxDays)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.LabelAsNewForMaxDays, null, new { postfix = T("Time.Days").Text })
                @Html.ValidationMessageFor(model => model.LabelAsNewForMaxDays)
            </td>
        </tr>
    </table>

	<table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="head">@T("Common.Navigation")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowCategoryProductNumber)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowCategoryProductNumber, Html.CheckBoxFor(model => model.ShowCategoryProductNumber, new { data_toggler_for = "#pnlShowCategoryProductNumberIncludingSubcategories" }))
                @Html.ValidationMessageFor(model => model.ShowCategoryProductNumber)
            </td>
        </tr>
        <tr id="pnlShowCategoryProductNumberIncludingSubcategories">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowCategoryProductNumberIncludingSubcategories)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowCategoryProductNumberIncludingSubcategories)
                @Html.ValidationMessageFor(model => model.ShowCategoryProductNumberIncludingSubcategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.CategoryBreadcrumbEnabled)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.CategoryBreadcrumbEnabled)
                @Html.ValidationMessageFor(model => model.CategoryBreadcrumbEnabled)
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="title">@T("Admin.Catalog.ProductTags")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.NumberOfProductTags)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.NumberOfProductTags)
                @Html.ValidationMessageFor(model => model.NumberOfProductTags)
            </td>
        </tr>
    </table>
}

@helper TabUserSettings()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowProductReviewsInProductLists)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowProductReviewsInProductLists)
                @Html.ValidationMessageFor(model => model.ShowProductReviewsInProductLists)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowProductReviewsInProductDetail)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowProductReviewsInProductDetail)
                @Html.ValidationMessageFor(model => model.ShowProductReviewsInProductDetail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ProductReviewsMustBeApproved)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ProductReviewsMustBeApproved)
                @Html.ValidationMessageFor(model => model.ProductReviewsMustBeApproved)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AllowAnonymousUsersToReviewProduct)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.AllowAnonymousUsersToReviewProduct)
                @Html.ValidationMessageFor(model => model.AllowAnonymousUsersToReviewProduct)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.NotifyStoreOwnerAboutNewProductReviews)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.NotifyStoreOwnerAboutNewProductReviews)
                @Html.ValidationMessageFor(model => model.NotifyStoreOwnerAboutNewProductReviews)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AskQuestionEnabled)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.AskQuestionEnabled)
                @Html.ValidationMessageFor(model => model.AskQuestionEnabled)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EmailAFriendEnabled)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.EmailAFriendEnabled, Html.CheckBoxFor(model => model.EmailAFriendEnabled, new { data_toggler_for = "#pnlAllowAnonymousUsersToEmailAFriend" }))
                @Html.ValidationMessageFor(model => model.EmailAFriendEnabled)
            </td>
        </tr>
		<tbody id="pnlAllowAnonymousUsersToEmailAFriend">
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.AllowAnonymousUsersToEmailAFriend)
				</td>
				<td class="adminData">
					@Html.SettingEditorFor(model => model.AllowAnonymousUsersToEmailAFriend)
					@Html.ValidationMessageFor(model => model.AllowAnonymousUsersToEmailAFriend)
				</td>
			</tr>
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.AllowDifferingEmailAddressForEmailAFriend)
				</td>
				<td class="adminData">
					@Html.SettingEditorFor(model => model.AllowDifferingEmailAddressForEmailAFriend)
					@Html.ValidationMessageFor(model => model.AllowDifferingEmailAddressForEmailAFriend)
				</td>
			</tr>
		</tbody>
    </table>
}

@helper TabProductDetailSettings()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.RecentlyViewedProductsEnabled)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.RecentlyViewedProductsEnabled, Html.CheckBoxFor(model => model.RecentlyViewedProductsEnabled, new { data_toggler_for = "#pnlRecentlyViewedProductsNumber" }))
                @Html.ValidationMessageFor(model => model.RecentlyViewedProductsEnabled)
            </td>
        </tr>
        <tr id="pnlRecentlyViewedProductsNumber">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.RecentlyViewedProductsNumber)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.RecentlyViewedProductsNumber)
                @Html.ValidationMessageFor(model => model.RecentlyViewedProductsNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.RecentlyAddedProductsEnabled)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.RecentlyAddedProductsEnabled, Html.CheckBoxFor(model => model.RecentlyAddedProductsEnabled, new { data_toggler_for = "#pnlRecentlyAddedProductsNumber" }))
                @Html.ValidationMessageFor(model => model.RecentlyAddedProductsEnabled)
            </td>
        </tr>
        <tr id="pnlRecentlyAddedProductsNumber">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.RecentlyAddedProductsNumber)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.RecentlyAddedProductsNumber)
                @Html.ValidationMessageFor(model => model.RecentlyAddedProductsNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ProductsAlsoPurchasedEnabled)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ProductsAlsoPurchasedEnabled, Html.CheckBoxFor(model => model.ProductsAlsoPurchasedEnabled, new { data_toggler_for = "#pnlProductsAlsoPurchasedNumber" }))
                @Html.ValidationMessageFor(model => model.ProductsAlsoPurchasedEnabled)
            </td>
        </tr>
        <tr id="pnlProductsAlsoPurchasedNumber">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ProductsAlsoPurchasedNumber)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ProductsAlsoPurchasedNumber)
                @Html.ValidationMessageFor(model => model.ProductsAlsoPurchasedNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.DisplayAllImagesNumber)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.DisplayAllImagesNumber)
                @Html.ValidationMessageFor(model => model.DisplayAllImagesNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerInProductDetail)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowManufacturerInProductDetail, Html.CheckBoxFor(model => model.ShowManufacturerInProductDetail, new { data_toggler_for = "#pnlManufacturerPictures" }))
                @Html.ValidationMessageFor(model => model.ShowManufacturerInProductDetail)
            </td>
        </tr>
        <tr id="pnlManufacturerPictures">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerPicturesInProductDetail)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowManufacturerPicturesInProductDetail)
                @Html.ValidationMessageFor(model => model.ShowManufacturerPicturesInProductDetail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowDeliveryTimesInProductDetail)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowDeliveryTimesInProductDetail)
                @Html.ValidationMessageFor(model => model.ShowDeliveryTimesInProductDetail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EnableDynamicPriceUpdate)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.EnableDynamicPriceUpdate)
                @Html.ValidationMessageFor(model => model.EnableDynamicPriceUpdate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.BundleItemShowBasePrice)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.BundleItemShowBasePrice)
                @Html.ValidationMessageFor(model => model.BundleItemShowBasePrice)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowVariantCombinationPriceAdjustment)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowVariantCombinationPriceAdjustment)
                @Html.ValidationMessageFor(model => model.ShowVariantCombinationPriceAdjustment)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLoginForPriceNote)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowLoginForPriceNote)
                @Html.ValidationMessageFor(model => model.ShowLoginForPriceNote)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLinkedAttributeValueQuantity)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowLinkedAttributeValueQuantity)
                @Html.ValidationMessageFor(model => model.ShowLinkedAttributeValueQuantity)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLinkedAttributeValueImage)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowLinkedAttributeValueImage)
                @Html.ValidationMessageFor(model => model.ShowLinkedAttributeValueImage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowShareButton)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowShareButton, Html.CheckBoxFor(model => model.ShowShareButton, new { data_toggler_for = "#pnlPageShareCode" }))
                @Html.ValidationMessageFor(model => model.ShowShareButton)
            </td>
        </tr>
        <tr id="pnlPageShareCode">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PageShareCode)
            </td>
            <td class="adminData">
                @Html.TextAreaFor(model => model.PageShareCode, new { style = "height:150px" })
                @Html.ValidationMessageFor(model => model.PageShareCode)
            </td>
        </tr>
    </table>
}

@helper TabBrandsSettings()
{
    <table class="adminContent">
        <tr id="pnlShowManufacturersOnHomepage">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturersOnHomepage)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowManufacturersOnHomepage, Html.CheckBoxFor(model => model.ShowManufacturersOnHomepage, new { data_toggler_for = "#pnlManufacturerItemsToDisplayOnHomepage" }))
                @Html.ValidationMessageFor(model => model.ShowManufacturersOnHomepage)
            </td>
        </tr>
        <tr id="pnlManufacturerItemsToDisplayOnHomepage">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ManufacturerItemsToDisplayOnHomepage)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ManufacturerItemsToDisplayOnHomepage)
                @Html.ValidationMessageFor(model => model.ManufacturerItemsToDisplayOnHomepage)
            </td>
        </tr>
        <tr id="pnlShowManufacturersInOffCanvas">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturersInOffCanvas)
            </td>
            <td class="adminData">
				@Html.SettingEditorFor(model => model.ShowManufacturersInOffCanvas, Html.CheckBoxFor(model => model.ShowManufacturersInOffCanvas, new { data_toggler_for = "#pnlManufacturerItemsToDisplayInOffCanvas" }))
                @Html.ValidationMessageFor(model => model.ShowManufacturersInOffCanvas)
            </td>
        </tr>
        <tr id="pnlManufacturerItemsToDisplayInOffCanvas">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ManufacturerItemsToDisplayInOffCanvasMenu)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ManufacturerItemsToDisplayInOffCanvasMenu)
                @Html.ValidationMessageFor(model => model.ManufacturerItemsToDisplayInOffCanvasMenu)
            </td>
        </tr>
        <tr id="pnlShowManufacturerPictures">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowManufacturerPictures)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ShowManufacturerPictures)
                @Html.ValidationMessageFor(model => model.ShowManufacturerPictures)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HideManufacturerDefaultPictures)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.HideManufacturerDefaultPictures)
                @Html.ValidationMessageFor(model => model.HideManufacturerDefaultPictures)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SortManufacturersAlphabetically)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.SortManufacturersAlphabetically)
                @Html.ValidationMessageFor(model => model.SortManufacturersAlphabetically)
            </td>
        </tr>
    </table>
}
}
