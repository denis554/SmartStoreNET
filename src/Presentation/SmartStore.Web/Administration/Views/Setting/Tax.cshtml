@model TaxSettingsModel
@using Telerik.Web.Mvc.UI;
@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.Tax").Text;
}
@using (Html.BeginForm())
{
    
<script type="text/javascript">
    $(document).ready(function () {

        $("#@Html.FieldIdFor(model => model.AllowCustomersToSelectTaxDisplayType)").click(toggleTaxDisplayType);
        $("#@Html.FieldIdFor(model => model.ShippingIsTaxable)").click(toggleShipping);
        $("#@Html.FieldIdFor(model => model.PaymentMethodAdditionalFeeIsTaxable)").click(togglePayment);
        $("#@Html.FieldIdFor(model => model.EuVatEnabled)").click(toggleEUVAT);
          
          
        toggleTaxDisplayType();
        toggleShipping();
        togglePayment();
        toggleEUVAT();
    });

    function toggleTaxDisplayType() {
        if ($('#@Html.FieldIdFor(model => model.AllowCustomersToSelectTaxDisplayType)').is(':checked')) {
            $('#pnlTaxDisplayType').hide();
        }
        else {
            $('#pnlTaxDisplayType').show();
        }
    }

    function toggleShipping() {
        if ($('#@Html.FieldIdFor(model => model.ShippingIsTaxable)').is(':checked')) {
            $('#pnlShippingPriceIncludesTax').show();
            $('#pnlShippingTaxClass').show();
        }
        else {
            $('#pnlShippingPriceIncludesTax').hide();
            $('#pnlShippingTaxClass').hide();
        }
    }

    function togglePayment() {
        if ($('#@Html.FieldIdFor(model => model.PaymentMethodAdditionalFeeIsTaxable)').is(':checked')) {
            $('#pnlPaymentMethodAdditionalFeeIncludesTax').show();
            $('#pnlPaymentMethodAdditionalFeeTaxClass').show();
        }
        else {
            $('#pnlPaymentMethodAdditionalFeeIncludesTax').hide();
            $('#pnlPaymentMethodAdditionalFeeTaxClass').hide();
        }
    }

    function toggleEUVAT() {
        if ($('#@Html.FieldIdFor(model => model.EuVatEnabled)').is(':checked')) {
            $('#pnlEuVatShopCountry').show();
            $('#pnlEuVatAllowVATExemption').show();
            $('#pnlEuVatUseWebService').show();
            $('#pnlEuVatEmailAdminWhenNewVATSubmitted').show();
        }
        else {
            $('#pnlEuVatShopCountry').hide();
            $('#pnlEuVatAllowVATExemption').hide();
            $('#pnlEuVatUseWebService').hide();
            $('#pnlEuVatEmailAdminWhenNewVATSubmitted').hide();
        }
    }
</script>
    
    <div class="section-header">
        <div class="title">
            @T("Admin.Configuration.Settings.Tax")
        </div>
        <div class="options">
            <button type="submit" name="save" value="save" class="btn btn-primary"><i class="icon-ok icon-white"></i>&nbsp;@T("Admin.Common.Save")</button>
        </div>
    </div>
	@Html.Action("StoreScopeConfiguration", "Setting")
	@Html.ValidationSummary(false)

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PricesIncludeTax)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.PricesIncludeTax, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.PricesIncludeTax)
                @Html.ValidationMessageFor(model => model.PricesIncludeTax)
            </td>
        </tr>

        @*not relevant for european market but we have to deal with this option later*@
        @*<tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AllowCustomersToSelectTaxDisplayType)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AllowCustomersToSelectTaxDisplayType)
                @Html.ValidationMessageFor(model => model.AllowCustomersToSelectTaxDisplayType)
            </td>
        </tr>*@

        <tr id="pnlTaxDisplayType">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.TaxDisplayType)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.TaxDisplayType, Model.ActiveStoreScopeConfiguration)
                @Html.DropDownListForEnum(model => model.TaxDisplayType)
                @Html.ValidationMessageFor(model => model.TaxDisplayType)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.DisplayTaxSuffix)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.DisplayTaxSuffix, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.DisplayTaxSuffix)
                @Html.ValidationMessageFor(model => model.DisplayTaxSuffix)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.DisplayTaxRates)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.DisplayTaxRates, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.DisplayTaxRates)
                @Html.ValidationMessageFor(model => model.DisplayTaxRates)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HideZeroTax)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.HideZeroTax, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.HideZeroTax)
                @Html.ValidationMessageFor(model => model.HideZeroTax)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.HideTaxInOrderSummary)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.HideTaxInOrderSummary, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.HideTaxInOrderSummary)
                @Html.ValidationMessageFor(model => model.HideTaxInOrderSummary)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLegalHintsInProductList)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShowLegalHintsInProductList, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.ShowLegalHintsInProductList)
                @Html.ValidationMessageFor(model => model.ShowLegalHintsInProductList)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLegalHintsInProductDetails)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShowLegalHintsInProductDetails, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.ShowLegalHintsInProductDetails)
                @Html.ValidationMessageFor(model => model.ShowLegalHintsInProductDetails)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShowLegalHintsInFooter)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShowLegalHintsInFooter, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.ShowLegalHintsInFooter)
                @Html.ValidationMessageFor(model => model.ShowLegalHintsInFooter)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.TaxBasedOn)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.TaxBasedOn, Model.ActiveStoreScopeConfiguration)
                @Html.DropDownListForEnum(model => model.TaxBasedOn)
                @Html.ValidationMessageFor(model => model.TaxBasedOn)
            </td>
        </tr>
        <tr>
            <td class="adminTitle" colspan="2">
                @Html.LabelFor(model => model.DefaultTaxAddress, new { style="font-weight: bold" })
            </td>
        </tr>
        <tr>
            <td colspan="2" id="pnlDefaultTaxAddress">
				@Html.OverrideStoreCheckboxFor(model => Model.DefaultTaxAddress, Model.ActiveStoreScopeConfiguration, "#pnlDefaultTaxAddress")
                @Html.EditorFor(x => x.DefaultTaxAddress, "Address")
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShippingIsTaxable)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShippingIsTaxable, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.ShippingIsTaxable)
                @Html.ValidationMessageFor(model => model.ShippingIsTaxable)
            </td>
        </tr>
        <tr id="pnlShippingPriceIncludesTax">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShippingPriceIncludesTax)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShippingPriceIncludesTax, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.ShippingPriceIncludesTax)
                @Html.ValidationMessageFor(model => model.ShippingPriceIncludesTax)
            </td>
        </tr>
        <tr id="pnlShippingTaxClass">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ShippingTaxClassId)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.ShippingTaxClassId, Model.ActiveStoreScopeConfiguration)
                @Html.DropDownListFor(model => model.ShippingTaxClassId, Model.ShippingTaxCategories, T("Common.PleaseSelect").Text)
                @Html.ValidationMessageFor(model => model.ShippingTaxClassId)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PaymentMethodAdditionalFeeIsTaxable)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.PaymentMethodAdditionalFeeIsTaxable, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.PaymentMethodAdditionalFeeIsTaxable)
                @Html.ValidationMessageFor(model => model.PaymentMethodAdditionalFeeIsTaxable)
            </td>
        </tr>
        <tr id="pnlPaymentMethodAdditionalFeeIncludesTax">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PaymentMethodAdditionalFeeIncludesTax)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.PaymentMethodAdditionalFeeIncludesTax, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.PaymentMethodAdditionalFeeIncludesTax)
                @Html.ValidationMessageFor(model => model.PaymentMethodAdditionalFeeIncludesTax)
            </td>
        </tr>
        <tr id="pnlPaymentMethodAdditionalFeeTaxClass">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PaymentMethodAdditionalFeeTaxClassId)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.PaymentMethodAdditionalFeeTaxClassId, Model.ActiveStoreScopeConfiguration)
                @Html.DropDownListFor(model => model.PaymentMethodAdditionalFeeTaxClassId, Model.PaymentMethodAdditionalFeeTaxCategories, T("Common.PleaseSelect").Text)
                @Html.ValidationMessageFor(model => model.PaymentMethodAdditionalFeeTaxClassId)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EuVatEnabled)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.EuVatEnabled, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.EuVatEnabled)
                @Html.ValidationMessageFor(model => model.EuVatEnabled)
            </td>
        </tr>
        <tr id="pnlEuVatShopCountry">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EuVatShopCountryId)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.EuVatShopCountryId, Model.ActiveStoreScopeConfiguration)
                @Html.DropDownListFor(model => model.EuVatShopCountryId, Model.EuVatShopCountries, T("Admin.Address.SelectCountry").Text)
                @Html.ValidationMessageFor(model => model.EuVatShopCountryId)
            </td>
        </tr>
        <tr id="pnlEuVatAllowVATExemption">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EuVatAllowVatExemption)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.EuVatAllowVatExemption, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.EuVatAllowVatExemption)
                @Html.ValidationMessageFor(model => model.EuVatAllowVatExemption)
            </td>
        </tr>
        <tr id="pnlEuVatUseWebService">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EuVatUseWebService)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.EuVatUseWebService, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.EuVatUseWebService)
                @Html.ValidationMessageFor(model => model.EuVatUseWebService)
            </td>
        </tr>
        <tr id="pnlEuVatEmailAdminWhenNewVATSubmitted">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EuVatEmailAdminWhenNewVatSubmitted)
            </td>
            <td class="adminData">
				@Html.OverrideStoreCheckboxFor(model => Model.EuVatEmailAdminWhenNewVatSubmitted, Model.ActiveStoreScopeConfiguration)
                @Html.EditorFor(model => model.EuVatEmailAdminWhenNewVatSubmitted)
                @Html.ValidationMessageFor(model => model.EuVatEmailAdminWhenNewVatSubmitted)
            </td>
        </tr>
    </table>
}