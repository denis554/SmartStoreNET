@using SmartStore.Admin.Models.Menus
@model MenuRecordModel

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.IsSystemMenu)
@Html.ValidationSummary(false)

@Html.SmartStore().TabStrip().Name("menu-edit").Style(TabsStyle.Material).Items(x =>
{
	x.Add().Text(T("Admin.Common.General").Text).Content(TabInfo()).Selected(true);
	x.Add().Text(T("Admin.Catalog.Categories.Acl").Text).Content(TabAcl());
	x.Add().Text(T("Admin.Common.Stores").Text).Content(TabStores());
	
	EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "menu-edit", this.Html, this.Model));
})

@helper TabInfo()
{ 
    <div class="adminContent mb-3">
        <div class="adminRow">
            <div class="adminTitle">
                @Html.SmartLabelFor(model => model.SystemName)
            </div>
            <div class="adminData">
				@Html.TextBoxFor(model => model.SystemName, Model.IsSystemMenu ? new { @readonly = "readonly" } : null )
                @Html.ValidationMessageFor(model => model.SystemName)
            </div>
        </div>
        <div class="adminRow">
            <div class="adminTitle">
                @Html.SmartLabelFor(model => model.Published)
            </div>
            <div class="adminData">
				@Html.CheckBoxFor(model => model.Published, Model.IsSystemMenu ? new { @readonly = "readonly" } : null )
                @Html.ValidationMessageFor(model => model.Published)
            </div>
        </div>
    </div>
    
    @(Html.LocalizedEditor<MenuRecordModel, MenuRecordLocalizedModel>("menu-info-localized",
            @<div class="adminContent">
                <div class="adminRow">
                    <div class="adminTitle">
                        @Html.SmartLabelFor(model => model.Locales[item].Title)
                    </div>
					<div class="adminData">
						@*IMPORTANT: Do not delete, this hidden element contains the id to assign localized values to the corresponding language *@
						@Html.HiddenFor(model => model.Locales[item].LanguageId, new { id = Html.FieldIdFor(model => model.Locales[item].LanguageId) + "_1" })

						@Html.EditorFor(model => model.Locales[item].Title)
						@Html.ValidationMessageFor(model => model.Locales[item].Title)
					</div>
                </div>
            </div>
            ,
            @<div class="adminContent">
                <div class="adminRow">
                    <div class="adminTitle">
                        @Html.SmartLabelFor(model => model.Title)
                    </div>
                    <div class="adminData">
                        @Html.EditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
            </div>
        ))

    if (Model.Id > 0)
    {
        <div id="menu-items-container">
            <h4 class="h4 mt-5">@T("Admin.ContentManagement.MenuLinks")</h4>

            <button type="button" class="btn btn-secondary btn-to-primary mb-1" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
	            <i class="fa fa-plus"></i>
	            <span>@T("Admin.ContentManagement.AddMenuItem")</span>
            </button>
		    <div class="dropdown-menu">
                @foreach (var provider in Model.AllProviders)
                {
			        <a class="dropdown-item" href="@Url.Action("CreateItem", new { providerName = provider.Value, menuId = Model.Id, parentItemId = 0, area = "Admin" })">
				        <span>@provider.Text</span>
			        </a>
                }
            </div>

            <div id="menu-items" class="menu-item-list">
                @Html.Partial("ItemList", Model)
            </div>
        </div>
    }
}

@helper TabStores()
{
	@Html.Partial("StoreSelector", Model)
}

@helper TabAcl()
{
	@Html.Partial("AclSelector", Model)
}

<script>
    $(function () {
        // Process item command.
        $('#menu-items-container').on('click', '.menu-item-command', function (e) {
            e.preventDefault();
            var el = $(this);
            switch (el.data('action')) {
                case 'delete-item':
					el.doAjax({
						type: 'POST',
						ask: @T("Admin.Common.AskToProceed").JsText,
						callbackSuccess: function (response) {
							$('#menu-items').html(response);
						}
					});
                    break;
            }
            return false;
        });
	});
</script>
