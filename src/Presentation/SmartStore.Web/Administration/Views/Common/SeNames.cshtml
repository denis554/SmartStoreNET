@model UrlRecordListModel
@using Telerik.Web.Mvc.UI
@{
    var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.System.SeNames").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <i class="fa fa-search"></i>
            @T("Admin.System.SeNames")
        </div>
        <div class="options">
            <button type="submit" id="delete-selected" class="btn btn-danger"><i class="fa fa-trash-o"></i>&nbsp;@T("Admin.System.SeNames.DeleteSelected")</button>
        </div>
    </div>
    <table style="margin:20px 0">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SeName)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SeName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                &nbsp;
            </td>
            <td class="adminData">
                <button type="button" id="btnSearch" class="btn">
					<i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")
				</button>
            </td>
        </tr>
    </table>
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<UrlRecordModel>()
                        .Name("sename-grid")
                        .ClientEvents(events => events.OnDataBinding("onDataBinding").OnDataBound("onDataBound"))
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.Id)
                                .ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' class='checkboxGroups'/>")
                                .Title("<input id='mastercheckbox' type='checkbox'/>")
                                .Width(50)
                                .HtmlAttributes(new { style = "text-align:center" })
                                .HeaderHtmlAttributes(new { style = "text-align:center" });
                            columns.Bound(x => x.Id).Width(50);
                            columns.Bound(x => x.Name);
                            columns.Bound(x => x.EntityId).Width(50);
                            columns.Bound(x => x.EntityName).Width(200);
                            columns.Bound(x => x.IsActive)
                                    .Template(item => @Html.SymbolForBool(item.IsActive))
                                    .ClientTemplate(@Html.SymbolForBool("IsActive"))
                                    .Centered()
                                    .Width(100);
                            columns.Bound(x => x.Language).Width(200);
                        })
                        .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("SeNames", "Common"))
                        .EnableCustomBinding(true))
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">
        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#btnSearch').click(function () {
                //search
                var grid = $('#sename-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SeName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#btnSearch").click();
                    return false;
                }
            });

            //"delete selected" button
            $('#delete-selected').click(function (e) {
                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelectedSeNames", "Common"))",
                    data: postData,
                    complete: function (data) {
                        //reload grid
                        var grid = $('#sename-grid').data('tGrid');
                        grid.currentPage = 1; //new search. Set page size to 1
                        grid.ajaxRequest();
                        //clear selected checkboxes
                        $('.checkboxGroups').attr('checked', false).change();
                        selectedIds = [];
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes. 
            $('#sename-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.  
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.  
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function onDataBinding(e) {
            var searchModel = {
                SeName: $('#@Html.FieldIdFor(model => model.SeName)').val()
        };
        e.data = searchModel;
    }

    function onDataBound(e) {

        $('#sename-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            //set checked based on if current checkbox's value is in selectedIds.  
            $(this).attr('checked', checked > -1);
        });

        updateMasterCheckbox();
    }

    function updateMasterCheckbox() {
        var numChkBoxes = $('#sename-grid input[type=checkbox][id!=mastercheckbox]').length;
        var numChkBoxesChecked = $('#sename-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
    </script>
}