@model PaymentMethodEditModel

@{
	ViewBag.Title = T("Common.Edit").Text + " - " + Model.FriendlyName;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "paymentmethod-form" }))
{
	<div class="section-header">
		<div class="title">
			<img src="@Url.Content(Model.IconUrl)" alt="@Model.FriendlyName" />
			@ViewBag.Title <span class="subtitle muted">(@(Model.SystemName))</span>
			<a href="@Url.Action("Providers", "Payment")">(@T("Admin.Common.BackToList"))</a>
		</div>
		<div class="options">
			<button type="submit" name="save" value="save" class="btn btn-primary"><i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")</button>
			<button type="submit" name="save" value="save-continue" class="btn">@T("Admin.Common.SaveContinue")</button>
		</div>
	</div>
	
	@Html.ValidationSummary(false)
	@Html.HiddenFor(model => model.SystemName)

	
	@Html.SmartStore().TabStrip().Name("paymentmethod-edit").Items(x =>
	{
		x.Add().Text(T("Admin.Common.General").Text).Content(TabGeneral()).Selected(true);
		x.Add().Text(T("Admin.Common.Restrictions").Text).Content(TabRestrictions());

		EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "paymentmethod-edit", this.Html, this.Model));
	})
}

@helper TabGeneral()
{
	@(Html.LocalizedEditor<PaymentMethodEditModel, ProviderLocalizedModel>("paymentmethod-general-localized",
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].FriendlyName)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => Model.Locales[item].FriendlyName)
				@Html.ValidationMessageFor(model => model.Locales[item].FriendlyName)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Description)
			</td>
			<td class="adminData">
				@Html.TextAreaFor(model => Model.Locales[item].Description, new { @class = "input-large" })
				@Html.ValidationMessageFor(model => model.Locales[item].Description)
			</td>
		</tr>
		<tr>
			<td colspan="2">
				@Html.HiddenFor(model => model.Locales[item].LanguageId)
			</td>
		</tr>
	</table>
	,
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.FriendlyName)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.FriendlyName)
				@Html.ValidationMessageFor(model => model.FriendlyName)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Description)
			</td>
			<td class="adminData">
				@Html.TextAreaFor(model => model.Description, new { @class = "input-large" })
				@Html.ValidationMessageFor(model => model.Description)
			</td>
		</tr>
	</table>
	))
}

@helper TabRestrictions()
{
	<div class="alert alert-info">
		@Html.Raw(T("Admin.Configuration.Payment.Methods.RestrictionNote"))
	</div>

	<div class="payment-restrictions">
		<table class="table">
			<tr>
				<th>
					<div class="checkbox">
						<label>
							<input type="checkbox" id="MasterCustomerRole" name="MasterCustomerRole" value="" />
							@T("Admin.Customers.CustomerRoles")
						</label>
					</div>
				</th>
				<th>
					<div class="checkbox">
						<label>
							<input type="checkbox" id="MasterShippingMethod" name="MasterShippingMethod" value="" />
							@T("Admin.Configuration.Shipping.Methods")
						</label>
					</div>
				</th>
				<th>
					<div class="checkbox">
						<label>
							<input type="checkbox" id="MasterCountry" name="MasterCountry" value="" />
							@T("Admin.Configuration.Countries")
						</label>
					</div>
				</th>
			</tr>
			<tr>
				<td class="column-customerroles">
					@foreach (var item in Model.AvailableCustomerRoles)
					{
						@RenderCheckbox(item, "CustomerRole_")
					}
				</td>
				<td class="column-shippingmethods">
					@foreach (var item in Model.AvailableShippingMethods)
					{
						@RenderCheckbox(item, "ShippingMethod_")
					}
				</td>
				<td class="column-countries">

					@foreach (var grp in Model.AvaliableCountries.Select((x, i) => new { Key = i / 4, Value = x }).GroupBy(x => x.Key, x => x.Value))
					{
						<div>
							@foreach (var item in grp)
							{
								<div class="country-countainer">
									@RenderCheckbox(item, "Country_")
								</div>
							}
						</div>
					}

				</td>
			</tr>
		</table>
	</div>
}


@helper RenderCheckbox(SelectListItem item, string prefix)
{
	<div class="checkbox">
		<label>
			<input type="checkbox" id="@(prefix)@(item.Value)" name="@(prefix)@(item.Value)" value="@item.Value" @(item.Selected ? "checked='checked'" : "") />
			@item.Text
		</label>
	</div>
}

<script type="text/javascript">
	jQuery(document).ready(function () {
		
		// restictions column header checkbox clicked
		$('.payment-restrictions th input[type="checkbox"]').change(function () {
			var id = $(this).attr('id').replace('Master', ''),
				isChecked = $(this).is(':checked');

			$('.payment-restrictions td input[name^="' + id + '"]').attr('checked', isChecked);
		});

	});
</script>