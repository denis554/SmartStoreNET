@using SmartStore.Web.Framework;
@using SmartStore.Core.Domain.Catalog;
@model OrderModel.AddOrderProductModel.ProductDetailsModel

@if (Model.ProductVariantAttributes.Count > 0)
{
    <div class="attributes">
        @foreach (var attribute in Model.ProductVariantAttributes)
		{
			var controlId = attribute.GetControlId(Model.ProductId, 0);
            <div>
                @if (attribute.IsRequired)
                {
                    <span>*</span>
                }
                @if (!string.IsNullOrEmpty(attribute.TextPrompt))
                {
                    <span style="font-weight: bold">@attribute.TextPrompt</span>
                }
                else
                {
                    <span style="font-weight: bold">@attribute.Name</span>
                }
                @if (attribute.AttributeControlType == AttributeControlType.TextBox ||
                    attribute.AttributeControlType == AttributeControlType.FileUpload)
                {
                    <text>&nbsp;&nbsp;&nbsp;</text>
                }
                else
                {
                    <br />
                }
                @switch (attribute.AttributeControlType)
                {
                    case AttributeControlType.DropdownList:
                        {
                    <select name="@(controlId)" id="@(controlId)">
                        @if (!attribute.IsRequired)
                        {
                            <option value="0">---</option>
                        }
                        @foreach (var pvaValue in attribute.Values)
                        {
                            <option @(pvaValue.IsPreSelected ? Html.Raw(" selected=\"selected\"") : null) value="@pvaValue.Id">@pvaValue.Name</option>
                        }
                    </select>
                        }
                        break;
                    case AttributeControlType.RadioList:
                    case AttributeControlType.Boxes:
                        {
                            foreach (var pvaValue in attribute.Values)
                            {
								<div class="radio">
									<label for="@(controlId)">
										<input id="@(controlId)" type="radio" class="form-control" name="@(controlId)" value="@pvaValue.Id" @(pvaValue.IsPreSelected ? Html.Raw(" checked=\"checked\"") : null) />
										@pvaValue.Name
									</label>
								</div>
							}
						}
						break;
					case AttributeControlType.Checkboxes:
						{
							foreach (var pvaValue in attribute.Values)
							{
								<div class="checkbox">
									<label for="@(controlId)">
										<input id="@(controlId)" type="checkbox" name="@(controlId)" value="@pvaValue.Id" @(pvaValue.IsPreSelected ? Html.Raw(" checked=\"checked\"") : null) />
										@pvaValue.Name
									</label>
								</div>
							}
						}
						break;
					case AttributeControlType.TextBox:
						{
                            <input name="@(controlId)" type="text" id="@(controlId)" class="textBox" style="width:300px;" />
                        }
                        break;
                    case AttributeControlType.MultilineTextbox:
                        {
                            <textarea cols="20" id="@(controlId)" name="@(controlId)" rows="2" style="Width: 300px; Height: 150px;"></textarea>
                        }
                        break;
                    case AttributeControlType.Datepicker:
                        {
                            @Html.DatePickerDropDowns(controlId + "-day", controlId + "-month", controlId + "-year", DateTime.Now.Year, DateTime.Now.Year + 1)
                        }
                        break;
                    case AttributeControlType.FileUpload:
                        {
                            <input type="file" id="@(controlId)" name="@(controlId)" />
                        }
                        break;
                }
            </div>
        }
    </div>
}