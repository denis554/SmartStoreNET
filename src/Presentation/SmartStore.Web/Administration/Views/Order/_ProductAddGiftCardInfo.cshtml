@using SmartStore.Core.Domain.Catalog;
@model OrderModel.AddOrderProductModel.GiftCardModel

@if (Model.IsGiftCard)
{
	<div class="adminContent">
		<div class="adminRow">
			<div class="adminTitle">
				@Html.SmartLabelFor(model => model.RecipientName)
			</div>
			<div class="adminData">
				@Html.EditorFor(model => model.RecipientName)
				@Html.ValidationMessageFor(model => model.RecipientName)
			</div>
		</div>

		@if (Model.GiftCardType == GiftCardType.Virtual)
		{
			<div class="adminRow">
				<div class="adminTitle">
					@Html.SmartLabelFor(model => model.RecipientEmail)
				</div>
				<div class="adminData">
					@Html.EditorFor(model => model.RecipientEmail)
					@Html.ValidationMessageFor(model => model.RecipientEmail)
				</div>
			</div>
		}

		<div class="adminRow">
			<div class="adminTitle">
				@Html.SmartLabelFor(model => model.SenderName)
			</div>
			<div class="adminData">
				@Html.EditorFor(model => model.SenderName)
				@Html.ValidationMessageFor(model => model.SenderName)
			</div>
		</div>

		@if (Model.GiftCardType == GiftCardType.Virtual)
		{
			<div class="adminRow">
				<div class="adminTitle">
					@Html.SmartLabelFor(model => model.SenderEmail)
				</div>
				<div class="adminData">
					@Html.EditorFor(model => model.SenderEmail)
					@Html.ValidationMessageFor(model => model.SenderEmail)
				</div>
			</div>
		}

		<div class="adminRow">
			<div class="adminTitle">
				@Html.SmartLabelFor(model => model.Message)
			</div>
			<div class="adminData">
				@Html.TextAreaFor(model => model.Message)
				@Html.ValidationMessageFor(model => model.Message)
			</div>
		</div>
	</div>
}
