@model OrderModel.AddOrderProductModel
@{
    var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = string.Format(T("Admin.Orders.Products.AddNew.Title1").Text, Model.OrderId);
}
@using Telerik.Web.Mvc.UI;
<div class="section-header">
    <div class="title">
        @string.Format(T("Admin.Orders.Products.AddNew.Title1").Text, Model.OrderId) @Html.ActionLink("(" + T("Admin.Orders.Products.AddNew.BackToOrder") + ")", "Edit", new { id = Model.OrderId })
    </div>
    <div class="options">
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchProductName)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => Model.SearchProductName)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchCategoryId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchCategoryId", Model.AvailableCategories, T("Admin.Common.All").Text)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchManufacturerId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers, T("Admin.Common.All").Text)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <button type="submit" id="search-products" value="search-products" class="btn"><i class="icon-search icon-white"></i>&nbsp;@T("Admin.Common.Search")</button>
        </td>
    </tr>
</table>
<table class="adminContent">
    <tr>
        <td>
            <strong>@T("Admin.Orders.Products.AddNew.Note1")</strong>
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().Grid<OrderModel.AddOrderProductModel.ProductVariantLineModel>()
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(pv => pv.Id).Width(70);
                        columns.Bound(pv => pv.Name).Width(400);
                        columns.Bound(pv => pv.Sku).Width(100);
                    })
                    .Selectable()
                    .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                            .DataBinding(dataBinding => dataBinding.Ajax().Select("AddProductToOrder", "Order"))
                    .ClientEvents(events => events.OnDataBinding("onDataBinding").OnRowSelected("onRowSelected"))
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>
<div id="productvariantdetails">
</div>
@Html.HiddenFor(model => Model.OrderId)
<script type="text/javascript">
    $(document).ready(function () {
        $('#search-products').click(function () {
            var grid = $('#products-grid').data('tGrid');
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });
    });

    $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
        if (event.keyCode == 13) {
            $("#search-products").click();
            return false;
        }
    });

    function onDataBinding(e) {
        var searchModel = {
            SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
            SearchCategoryId: $('#SearchCategoryId').val(),
            SearchManufacturerId: $('#SearchManufacturerId').val()
        };
        e.data = searchModel;
    }

    function onRowSelected(e) {
        productVariantID = e.row.cells[0].innerHTML;
        //load "product variant details page" block
        var productDetailsActionUrl = '@Html.Raw(Url.Action("AddProductToOrderDetails", "Order", new { orderId = Model.OrderId, productVariantId = "productvariantidplaceholder" }))';
        productDetailsActionUrl = productDetailsActionUrl.replace("productvariantidplaceholder", productVariantID);
        setLocation(productDetailsActionUrl);
    }
</script>
