@model PrintableShipmentModel
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Admin.Models.Shipping;
@using SmartStore.Services.Localization;
@using SmartStore.Core.Html;
@{

    Layout = "~/Views/Shared/_Print.cshtml";

    //title
    Html.AddTitleParts(T("Admin.Orders.Shipments.ViewDetails").Text);

    var company = Model.MerchantCompanyInfo;
    var address = Model.ShippingAddress;

    var colWidths = new int[] { 50, 20, 10 };
}

@helper ShipmentLine(PrintableShipmentModel.ShipmentItemModel item)
{
    <tr>
        <td class="text-left">
            @item.ProductName
            
            @if (item.AttributeInfo.HasValue())
            {
                <div class="attributes  text-small">
                    @Html.Raw(item.AttributeInfo)
                </div>
            }
            
        </td>
        
        <td class="text-left">
            @item.Sku
        </td>
        <td class="text-left">
            @item.QuantityInThisShipment
        </td>
        @*<td class="text-left">
            @item.ItemDimensions
        </td>*@
        <td class="text-right">
            @item.ItemWeight
        </td>
    </tr>
}

<div class="container">

    <div class="document">
        <!-- Address & Info -->
        <div class="clearfix">
            <div class="order-address margin-top-40 pull-left">
                <div>
                    <span class="header text-smallest">
                        @company.CompanyName &middot; @company.Street @company.Street2 &middot; @company.ZipCode @company.City &middot; @company.CountryName @company.StateName
                    </span>
                </div>
                <div class="margin-top-10">
                    @if (address.Company.HasValue())
                    {
                        <div>@address.Company</div>
                    }
                    <div>@address.FirstName @address.LastName</div>
                    @if (address.Address1.HasValue())
                    {
                        <div>@address.Address1</div>
                    }
                    @if (address.Address2.HasValue())
                    {
                        <div>@address.Address2</div>
                    }
                    @if (address.ZipPostalCode.HasValue() || address.City.HasValue())
                    {
                        <div>@address.ZipPostalCode @address.City</div>
                    }
                    @if (address.StateProvince != null || address.Country != null)
                    {
                        <div>
                            @address.Country.Name.EmptyNull()

                            @if (address.StateProvince != null && address.StateProvince.Name.HasValue())
                            {
                                if (address.Country.Name.HasValue())
                                {
                                    <text>, </text>
                                }
                                <text>@address.StateProvince.Name</text>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="order-info text-small pull-right">
                <table>
                    <tr>
                        <td class="label">@T("PDFPackagingSlip.Shipment").Text.FormatWith(String.Empty):</td>
                        <td class="value">@Model.Id</td>
                    </tr>
                    <tr>
                        <td class="label">@T("PDFPackagingSlip.Order").Text.FormatWith(String.Empty):</td>
                        <td class="value">@Model.OrderId</td>
                    </tr>
                    <tr>
                        <td class="label">Lieferdatum:</td>
                        <td class="value">@Model.DeliveryDate</td>
                    </tr>
                    @if (!String.IsNullOrEmpty(Model.TrackingNumber))
                    {
                        <tr>
                            <td class="label">TrackingNumber:</td>
                            <td class="value">@Model.TrackingNumber</td>
                        </tr>
                    }
                    <tr>
                        <td class="label">Versandart:</td>
                        <td class="value">@Model.ShippingMethod</td>
                    </tr>
                </table>
            </div>
        </div>

        <h3>Gelieferte Produkte</h3>

        <table class="table order-summary">
            <thead>
                <tr>
                    <th class="text-left" style="width: @(colWidths[0])%">@T("PDFPackagingSlip.ProductName")</th>
                    <th class="text-left" style="width: @(colWidths[2])%">@T("PDFPackagingSlip.SKU")</th>
                    <th class="text-left" style="width: @(colWidths[2])%">@T("PDFPackagingSlip.QTY")</th>
                    <th class="text-right" style="width: @(colWidths[1])%">Gewicht</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    var item = Model.Items[i];
                    @ShipmentLine(item)
                }
            </tbody>
        </table>
    </div>
</div>