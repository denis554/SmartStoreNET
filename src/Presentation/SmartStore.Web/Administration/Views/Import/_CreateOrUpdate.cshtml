@using SmartStore.Admin.Models.DataExchange;
@model ImportProfileModel
@{
	Html.AddScriptParts("~/bundles/fileupload");
	Html.AddCssFileParts("~/css/fileupload");
}

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.FileName)

<table class="adminContent">
	<tr id="ImportFileUploadContainer">
		<td class="adminTitle">
			&nbsp;
		</td>
		<td class="adminData">

			<div id="ImportFileUploader" class="fileupload">
				<span class="btn btn-primary fileinput-button">
					<i class="fa fa-upload"></i>
					<span>@T("Admin.DataExchange.Import.FileUpload")</span>
					<input id="ImportFileUpload" type="file" name="importfile" />
				</span>

				<button class="btn btn-warning cancel">
					<i class="fa fa-times"></i>
					<span>@T("Common.Fileuploader.Cancel")</span>
				</button>

				<div class="span5 fileupload-progress fade">
					<div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
						<div class="bar" style="width:0%;"></div>
					</div>
					<div class="progress-extended">&nbsp;</div>
				</div>
			</div>

		</td>
	</tr>
	<tr id="ImportFileListContainer" class="@(Model.ExistingFileNames.Count > 0 ? "" : "hide")">
		<td class="adminTitle">
			&nbsp;
		</td>
		<td id="ImportFileList" class="adminData">
			@Html.Partial("_ImportFileList", Model)
		</td>
	</tr>
	@if (Model.ScheduleTaskId > 0)
	{
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(x => x.ScheduleTaskId)
			</td>
			<td class="adminData">
				@Html.Action("MinimalTask", "ScheduleTask", new { taskId = Model.ScheduleTaskId, returnUrl = Request.RawUrl, cancellable = true, area = "admin" })
			</td>
		</tr>
	}
	<tr>
		<td colspan="2">&nbsp;</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(x => x.Name)
		</td>
		<td class="adminData">
			@Html.EditorFor(x => x.Name)
			@Html.ValidationMessageFor(x => x.Name)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(x => x.EntityType)
		</td>
		<td class="adminData">
			@Html.DropDownListFor(x => x.EntityType, Model.AvailableEntityTypes)
			@Html.ValidationMessageFor(x => x.EntityType)
		</td>
	</tr>
	@if (Model.Id != 0)
	{
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(x => x.Enabled)
			</td>
			<td class="adminData">
				@Html.EditorFor(x => x.Enabled)
				@Html.ValidationMessageFor(x => x.Enabled)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(x => x.Skip)
			</td>
			<td class="adminData">
				@Html.EditorFor(x => x.Skip)
				@Html.ValidationMessageFor(x => x.Skip)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(x => x.Take)
			</td>
			<td class="adminData">
				@Html.EditorFor(x => x.Take)
				@Html.ValidationMessageFor(x => x.Take)
			</td>
		</tr>
	}
</table>

@if (Model.CsvConfiguration != null)
{
	var viewData = new ViewDataDictionary();
	viewData.Add("ShowGroupCaption", true);
	viewData.TemplateInfo.HtmlFieldPrefix = "CsvConfiguration";
	viewData.ModelState.Merge(ViewData.ModelState);
	@Html.Partial("CsvConfiguration", Model.CsvConfiguration, viewData)
}

<script type="text/javascript">
	jQuery(document).ready(function () {

		// upload import file
		$('#ImportFileUploader').fileupload({
			url: '@Url.Action("FileUpload", new { id = Model.Id })',
			dataType: 'json',
			acceptFileTypes: /(\.|\/)(csv|xls|xlsx)$/i,
			done: function (e, data) {
				if (data.result.success) {
					$('#ImportFileListContainer').show();

					if (!_.isEmpty(data.result.tempFile)) {
						$('input[name=FileName]').val(data.result.tempFile);
						$('#ImportFileList').html(data.result.tempFile);
						$('#ImportFileUploadContainer').hide();		// just one initial file to specify the file type
					}

					if (!_.isEmpty(data.result.fileList)) {
						$('#ImportFileList').html(data.result.fileList);
					}
				}
			}
		});

		// delete import file
		$('#ImportFileList').on('click', '.import-file-delete', function (e) {
			e.preventDefault();
			var url = '@Url.Action("DeleteImportFile", new { id = Model.Id })';

			$({}).doAjax({
				type: 'POST',
				url: url + '?name=' + encodeURIComponent($(this).attr('data-filename')),
				ask: '@T("Admin.Common.AreYouSure")',
				callbackSuccess: function (resp) {
					if (!_.isEmpty(resp))
						$('#ImportFileList').html(resp);
				}
			});
			return false;
		});

	});
</script>