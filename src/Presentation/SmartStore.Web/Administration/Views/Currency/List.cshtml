@model Telerik.Web.Mvc.GridModel<CurrencyModel>
@using Telerik.Web.Mvc.UI
@{
    List<SmartStore.Core.Domain.Directory.ExchangeRate> rates = ViewBag.Rates;
    bool autoUpdateEnabled = ViewBag.AutoUpdateEnabled ?? false;
    //page title
    ViewBag.Title = T("Admin.Configuration.Currencies").Text;
}
<div class="section-header">
    <div class="title">
        <i class="icon icon-money"></i>
        @T("Admin.Configuration.Currencies")
    </div>
    <div class="options">
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="icon-plus"></i>
            @T("Admin.Common.AddNew")
        </a>
        <a href="javascript:document.CurrencySettings.submit()" class="btn">
            <i class="icon-ok"></i>
            @T("Admin.Common.Save")
        </a>
        <a href="@Url.Action("List", "Currency", new { liveRates = true })" class="btn">
            <i class="icon-refresh"></i>
            @T("Admin.Configuration.Currencies.GetLiveRates")
        </a>
    </div>
</div>
@using (Html.BeginForm("Save", "Currency", FormMethod.Post, new { name = "CurrencySettings" }))
{  
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @T("Admin.Configuration.Currencies.Fields.ExchangeRateProvider"):
            </td>
            <td class="adminData">
                @(Html.DropDownList("exchangeRateProvider", ViewBag.ExchangeRateProviders as IEnumerable<SelectListItem>))
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @T("Admin.Configuration.Currencies.Fields.CurrencyRateAutoUpdateEnabled"):
            </td>
            <td class="adminData">
                @(Html.CheckBox("autoUpdateEnabled", autoUpdateEnabled)
                )
            </td>
        </tr>
    </table>
}
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<CurrencyModel>()
                    .Name("currencies-grid")
                    .BindTo(Model.Data)
                    .Columns(columns =>
                    {
						columns.Bound(x => x.Name)
							.Template(x => Html.ActionLink(x.Name, "Edit", new { id = x.Id }));
                        columns.Bound(x => x.CurrencyCode)
                            .Centered();
                        columns.Bound(x => x.Rate)
                            .Centered()
							.Format("{0:G29}");
                        columns.Bound(x => x.DomainEndings);
                        columns.Bound(x => x.IsPrimaryExchangeRateCurrency)
                            .Centered()
							.Template(					    
								@<a href='@Url.Action("MarkAsPrimaryExchangeRateCurrency", new { id = item.Id })' class="btn" @Html.Attr("disabled", "disabled", item.IsPrimaryExchangeRateCurrency) title='@T("Admin.Configuration.Currencies.Fields.MarkAsPrimaryExchangeRateCurrency").Text'>
									@if (item.IsPrimaryExchangeRateCurrency)
									{
										<i class="icon icon-ok"></i>
									}
									@T("Admin.Telerik.GridLocalization.Select")
								</a>
							)
                            .Width(100);
                        columns.Bound(x => x.IsPrimaryStoreCurrency)
                            .Centered()
							.Template(					    
								@<a href='@Url.Action("MarkAsPrimaryStoreCurrency", new { id = item.Id })' class="btn" @Html.Attr("disabled", "disabled", item.IsPrimaryStoreCurrency) title='@T("Admin.Configuration.Currencies.Fields.MarkAsPrimaryStoreCurrency").Text'>
									@if (item.IsPrimaryStoreCurrency)
									{
										<i class="icon icon-ok"></i>
									}
									@T("Admin.Telerik.GridLocalization.Select")
								</a>
							)
                            .Width(100);
                        columns.Bound(x => x.Published)
                            .Template(item => Html.SymbolForBool(item.Published))
                            .Centered()
                            .Width(100);
                    })
)
        </td>
    </tr>
</table>
<p>
</p>
@if (rates != null)
{
    <h4>@T("Admin.Configuration.Currencies.LiveRates")</h4>
    <table class="adminContent" style="width: 300px">
        <tr>
            <td>
                @(Html.Telerik().Grid<SmartStore.Core.Domain.Directory.ExchangeRate>()
                        .Name("rate-grid")
                        .DataKeys(x =>
                        {
                            x.Add(y => y.CurrencyCode).RouteKey("CurrencyCode");
                        })
                        .BindTo(rates)
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.CurrencyCode)
                                .Centered()
                                .HeaderTemplate(T("Admin.Configuration.Currencies.Fields.CurrencyCode").Text);
                            columns.Bound(x => x.Rate)
                                .Centered()
                                .HeaderTemplate(T("Admin.Configuration.Currencies.Fields.Rate").Text);
                            columns.Bound(x => x)
                                .Template(x => Html.ActionLink(T("Admin.Configuration.Currencies.ApplyRate").Text, "ApplyRate", new { rate = x.Rate, currencyCode = x.CurrencyCode }))
                                .Centered()
                                .HeaderTemplate(T("Admin.Configuration.Currencies.ApplyRate").Text)
                                .Filterable(false);

                        })
                        .EnableCustomBinding(true)
                        )
            </td>
        </tr>
    </table>
}
